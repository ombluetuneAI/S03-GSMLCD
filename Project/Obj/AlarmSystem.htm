<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\AlarmSystem.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\AlarmSystem.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060300: Last Updated: Mon Oct 16 21:05:20 2017
<BR><P>
<H3>Maximum Stack Usage =        576 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Parse &rArr; Update &rArr; UpdateIcon &rArr; BmpDecode &rArr; f_open &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[37]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[37]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[370]">_Findy1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[370]">_Findy1</a><BR>
 <LI><a href="#[372]">_Findx1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[372]">_Findx1</a><BR>
 <LI><a href="#[371]">_Findx0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[371]">_Findx0</a><BR>
 <LI><a href="#[36e]">_EnlargeBlocks</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1bb]">_Alloc</a><BR>
 <LI><a href="#[356]">WM__InvalidateRect</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[356]">WM__InvalidateRect</a><BR>
 <LI><a href="#[34a]">WM_InvalidateWindowAndDescsEx</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[34a]">WM_InvalidateWindowAndDescsEx</a><BR>
 <LI><a href="#[345]">WM__InvalidateDrawAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[345]">WM__InvalidateDrawAndDescs</a><BR>
 <LI><a href="#[341]">WM_SendToParent</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[34d]">WM__SendMessage</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[37]">ADC1_2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[54]">ADC3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[71]">AdcSystick100Routine</a> from device_adc.o(i.AdcSystick100Routine) referenced from device_adc.o(i.InitAdc)
 <LI><a href="#[82]">AddArCheck</a> from systemgui.o(i.AddArCheck) referenced from systemgui.o(i.InitGui)
 <LI><a href="#[84]">AddAutoDigit</a> from systemgui.o(i.AddAutoDigit) referenced from systemgui.o(i.InitGui)
 <LI><a href="#[7c]">AddCheckBox</a> from systemgui.o(i.AddCheckBox) referenced from systemgui.o(i.InitGui)
 <LI><a href="#[7a]">AddFillArea</a> from systemgui.o(i.AddFillArea) referenced from systemgui.o(i.InitGui)
 <LI><a href="#[83]">AddFocus</a> from systemgui.o(i.AddFocus) referenced from systemgui.o(i.InitGui)
 <LI><a href="#[75]">AddIcon</a> from systemgui.o(i.AddIcon) referenced from systemgui.o(i.InitGui)
 <LI><a href="#[76]">AddLabel</a> from systemgui.o(i.AddLabel) referenced from systemgui.o(i.InitGui)
 <LI><a href="#[77]">AddList</a> from systemgui.o(i.AddList) referenced from systemgui.o(i.InitGui)
 <LI><a href="#[79]">AddListBox</a> from systemgui.o(i.AddListBox) referenced from systemgui.o(i.InitGui)
 <LI><a href="#[78]">AddLists</a> from systemgui.o(i.AddLists) referenced from systemgui.o(i.InitGui)
 <LI><a href="#[7b]">AddTextBox</a> from systemgui.o(i.AddTextBox) referenced from systemgui.o(i.InitGui)
 <LI><a href="#[a9]">AlarmSirenClose</a> from wirelessprocess.o(i.AlarmSirenClose) referenced from wirelessprocess.o(i.SirenAlarm)
 <LI><a href="#[67]">ArmSms</a> from wirelessprocess.o(i.ArmSms) referenced from wirelessprocess.o(i.DelayArmProcess)
 <LI><a href="#[11]">AutoAddrGet</a> from setupmenu.o(i.AutoAddrGet) referenced 2 times from menulist.o(.data)
 <LI><a href="#[65]">AutoHangUpTime</a> from eventprocess.o(i.AutoHangUpTime) referenced from eventprocess.o(i.CallRingProcess)
 <LI><a href="#[65]">AutoHangUpTime</a> from eventprocess.o(i.AutoHangUpTime) referenced from eventprocess.o(i.CidUpload)
 <LI><a href="#[65]">AutoHangUpTime</a> from eventprocess.o(i.AutoHangUpTime) referenced from eventprocess.o(i.DtmfProcess)
 <LI><a href="#[1f]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3a]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3b]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[91]">CloseUsart2</a> from device_usart.o(i.CloseUsart2) referenced from device_usart.o(i.InitUsart)
 <LI><a href="#[7]">CodeWirelessOpen</a> from zonemenu.o(i.CodeWirelessOpen) referenced 4 times from menulist.o(.data)
 <LI><a href="#[85]">CreateLogicTask</a> from os.o(i.CreateLogicTask) referenced from os.o(i.InitOs)
 <LI><a href="#[86]">CreateMenuTask</a> from os.o(i.CreateMenuTask) referenced from os.o(i.InitOs)
 <LI><a href="#[30]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[31]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[32]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[33]">DMA1_Channel4_IRQHandler</a> from spi.o(i.DMA1_Channel4_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[34]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[35]">DMA1_Channel6_IRQHandler</a> from device_gsm.o(i.DMA1_Channel6_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[36]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5d]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5e]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5f]">DMA2_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[60]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[22]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[66]">DefaultRest</a> from securintymenu.o(i.DefaultRest) referenced from securintymenu.o(i.DefaultsSetup)
 <LI><a href="#[f]">DefaultsSetup</a> from securintymenu.o(i.DefaultsSetup) referenced 2 times from menulist.o(.data)
 <LI><a href="#[f]">DefaultsSetup</a> from securintymenu.o(i.DefaultsSetup) referenced from securintymenu.o(i.SecurintyInit)
 <LI><a href="#[64]">DelayAlarmProcess</a> from wirelessprocess.o(i.DelayAlarmProcess) referenced from wirelessprocess.o(i.AlarmProcess)
 <LI><a href="#[a2]">DelayArmProcess</a> from wirelessprocess.o(i.DelayArmProcess) referenced from wirelessprocess.o(i.RemoteAlawyAndStayProcess)
 <LI><a href="#[8a]">DelayMs</a> from os.o(i.DelayMs) referenced from os.o(i.InitOs)
 <LI><a href="#[6]">DelectorDeleteCancel</a> from zonemenu.o(i.DelectorDeleteCancel) referenced 2 times from menulist.o(.data)
 <LI><a href="#[10]">DeleteCancel</a> from phonemenu.o(i.DeleteCancel) referenced 2 times from menulist.o(.data)
 <LI><a href="#[9]">DeleteRemoteCancel</a> from zonemenu.o(i.DeleteRemoteCancel) referenced 2 times from menulist.o(.data)
 <LI><a href="#[12]">DialBufferClean</a> from callmenu.o(i.DialBufferClean) referenced 2 times from menulist.o(.data)
 <LI><a href="#[ac]">DisarmSms</a> from wirelessprocess.o(i.DisarmSms) referenced from wirelessprocess.o(i.UnlockProcess)
 <LI><a href="#[15]">Dummy</a> from device_systick.o(i.Dummy) referenced 32 times from device_systick.o(.data)
 <LI><a href="#[2b]">EXTI0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4d]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2c]">EXTI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2d]">EXTI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2e]">EXTI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2f]">EXTI4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3c]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[29]">FLASH_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[55]">FSMC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[73]">FlashReadData</a> from device_flash.o(i.FlashReadData) referenced from device_flash.o(i.InitFlash)
 <LI><a href="#[72]">FlashWrite</a> from device_flash.o(i.FlashWrite) referenced from device_flash.o(i.InitFlash)
 <LI><a href="#[a5]">FocusFormReturn</a> from screensavertime.o(i.FocusFormReturn) referenced from screensavertime.o(i.ScreenTimeSet)
 <LI><a href="#[df]">GUIMONO_DispChar</a> from gui_charm.o(i.GUIMONO_DispChar) referenced 4 times from f6x8.o(.constdata)
 <LI><a href="#[e0]">GUIMONO_GetCharDistX</a> from gui_charm.o(i.GUIMONO_GetCharDistX) referenced 4 times from f6x8.o(.constdata)
 <LI><a href="#[e1]">GUIMONO_GetFontInfo</a> from gui_charm.o(i.GUIMONO_GetFontInfo) referenced 4 times from f6x8.o(.constdata)
 <LI><a href="#[e2]">GUIMONO_IsInFont</a> from gui_charm.o(i.GUIMONO_IsInFont) referenced 4 times from f6x8.o(.constdata)
 <LI><a href="#[db]">GUIPROP_DispChar</a> from gui_charp.o(i.GUIPROP_DispChar) referenced 13 times from f13b_1.o(.constdata)
 <LI><a href="#[dc]">GUIPROP_GetCharDistX</a> from gui_charp.o(i.GUIPROP_GetCharDistX) referenced 13 times from f13b_1.o(.constdata)
 <LI><a href="#[dd]">GUIPROP_GetFontInfo</a> from gui_charp.o(i.GUIPROP_GetFontInfo) referenced 13 times from f13b_1.o(.constdata)
 <LI><a href="#[de]">GUIPROP_IsInFont</a> from gui_charp.o(i.GUIPROP_IsInFont) referenced 13 times from f13b_1.o(.constdata)
 <LI><a href="#[c4]">GUI_Clear</a> from gui_core.o(i.GUI_Clear) referenced from emwingui.o(i.emWinInit)
 <LI><a href="#[c0]">GUI_DispStringAt</a> from gui_dispstringat.o(i.GUI_DispStringAt) referenced from emwingui.o(i.emWinInit)
 <LI><a href="#[bc]">GUI_MEMDEV__WriteToActiveOpaque</a> from guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque) referenced from guidev_16.o(i._GetDevFunc)
 <LI><a href="#[c2]">GUI_SetBkColor</a> from gui_setcolor.o(i.GUI_SetBkColor) referenced from emwingui.o(i.emWinInit)
 <LI><a href="#[c3]">GUI_SetColor</a> from gui_setcolor.o(i.GUI_SetColor) referenced from emwingui.o(i.emWinInit)
 <LI><a href="#[c1]">GUI_SetPenSize</a> from gui_pen.o(i.GUI_SetPenSize) referenced from emwingui.o(i.emWinInit)
 <LI><a href="#[1a]">GUI_X_ExecIdle</a> from gui_x.o(i.GUI_X_ExecIdle) referenced 2 times from gui_waitevent.o(.data)
 <LI><a href="#[18]">GUI__MixColors</a> from gui__alpha.o(i.GUI__MixColors) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[19]">GUI__MixColorsBulk</a> from gui__alpha.o(i.GUI__MixColorsBulk) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[6c]">GsmATSend</a> from device_gsm.o(i.GsmATSend) referenced from device_gsm.o(i.GsmInit)
 <LI><a href="#[6f]">GsmCall</a> from device_gsm.o(i.GsmCall) referenced from device_gsm.o(i.GsmInit)
 <LI><a href="#[6e]">GsmSendSMS</a> from device_gsm.o(i.GsmSendSMS) referenced from device_gsm.o(i.GsmInit)
 <LI><a href="#[1d]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[45]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[44]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[47]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[46]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[9c]">ImageDraw</a> from device_lcd.o(i.ImageDraw) referenced from device_lcd.o(i.LCDInit)
 <LI><a href="#[9d]">ImageLocalDraw</a> from device_lcd.o(i.ImageLocalDraw) referenced from device_lcd.o(i.LCDInit)
 <LI><a href="#[14]">Init</a> from system.o(i.Init) referenced 2 times from system.o(.data)
 <LI><a href="#[14]">Init</a> from system.o(i.Init) referenced from system.o(i.Init)
 <LI><a href="#[7d]">InitForm</a> from systemgui.o(i.InitForm) referenced from systemgui.o(i.InitGui)
 <LI><a href="#[a0]">KeyLEDClose</a> from device_led.o(i.KeyLEDClose) referenced from device_led.o(i.LEDInit)
 <LI><a href="#[13]">KeyPadCallProcess</a> from callmenu.o(i.KeyPadCallProcess) referenced 2 times from menulist.o(.data)
 <LI><a href="#[ab]">KeySystick100Routine</a> from device_key.o(i.KeySystick100Routine) referenced from bsp.o(i.SystemDeviceInit)
 <LI><a href="#[b]">KeyToneSetup</a> from setupmenu.o(i.KeyToneSetup) referenced 2 times from menulist.o(.data)
 <LI><a href="#[96]">LCDClear</a> from device_lcd.o(i.LCDClear) referenced from device_lcd.o(i.LCDInit)
 <LI><a href="#[9b]">LCDDrawPoint</a> from device_lcd.o(i.LCDDrawPoint) referenced from device_lcd.o(i.LCDInit)
 <LI><a href="#[98]">LCDDrawingBitmap</a> from device_lcd.o(i.LCDDrawingBitmap) referenced from device_lcd.o(i.LCDInit)
 <LI><a href="#[9a]">LCDReadPointRGB</a> from device_lcd.o(i.LCDReadPointRGB) referenced from device_lcd.o(i.LCDInit)
 <LI><a href="#[d8]">LCD_DrawHLine</a> from lcd.o(i.LCD_DrawHLine) referenced from gui_core.o(.constdata)
 <LI><a href="#[d9]">LCD_DrawPixel</a> from lcd.o(i.LCD_DrawPixel) referenced from gui_core.o(.constdata)
 <LI><a href="#[16]">LCD_GetpPalConvTableBM</a> from lcd_color.o(i.LCD_GetpPalConvTableBM) referenced 2 times from gui_core.o(.data)
 <LI><a href="#[d4]">LCD_Index2Color_M565</a> from guicc_m565_index2color.o(i.LCD_Index2Color_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[b4]">LCD_SetPixelAA</a> from lcd_aa.o(i.LCD_SetPixelAA) referenced from guiaa_lib.o(i._FlushLine)
 <LI><a href="#[9f]">LEDConfig</a> from device_led.o(i.LEDConfig) referenced from device_led.o(i.LEDInit)
 <LI><a href="#[97]">LcdFillArea</a> from device_lcd.o(i.LcdFillArea) referenced from device_lcd.o(i.LCDInit)
 <LI><a href="#[81]">ListSearch</a> from systemgui.o(i.ListSearch) referenced from systemgui.o(i.InitGui)
 <LI><a href="#[a]">LogAddrGet</a> from logprocess.o(i.LogAddrGet) referenced 2 times from menulist.o(.data)
 <LI><a href="#[c5]">LogicTask</a> from tasklogic.o(i.LogicTask) referenced from app.o(i.main)
 <LI><a href="#[1e]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[c6]">MenuTask</a> from taskmenu.o(i.MenuTask) referenced from app.o(i.main)
 <LI><a href="#[80]">ModifyTextBoxData</a> from systemgui.o(i.ModifyTextBoxData) referenced from systemgui.o(i.InitGui)
 <LI><a href="#[1c]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[b0]">OpenRF</a> from taskmenu.o(i.OpenRF) referenced from device_wireless.o(i.WirelessDecodeInterrupt)
 <LI><a href="#[b0]">OpenRF</a> from taskmenu.o(i.OpenRF) referenced from taskmenu.o(i.WirelessOpen)
 <LI><a href="#[a1]">OpenRx</a> from taskmenu.o(i.OpenRx) referenced from taskmenu.o(i.MenuTask)
 <LI><a href="#[90]">OpenUsart2</a> from device_usart.o(i.OpenUsart2) referenced from device_usart.o(i.InitUsart)
 <LI><a href="#[26]">PVD_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[95]">PanelAlarm</a> from tasklogic.o(i.PanelAlarm) referenced from tasklogic.o(i.KeyProcess)
 <LI><a href="#[74]">Parse</a> from systemgui.o(i.Parse) referenced from systemgui.o(i.InitGui)
 <LI><a href="#[88]">PendMessageQueue</a> from os.o(i.PendMessageQueue) referenced from os.o(i.InitOs)
 <LI><a href="#[23]">PendSV_Handler</a> from os.o(.emb_text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[a6]">PhoneDefault</a> from securintymenu.o(i.PhoneDefault) referenced from securintymenu.o(i.SecurintyInit)
 <LI><a href="#[e]">PhoneTypeAddr</a> from phonemenu.o(i.PhoneTypeAddr) referenced 4 times from menulist.o(.data)
 <LI><a href="#[89]">PostMessageQueue</a> from os.o(i.PostMessageQueue) referenced from os.o(i.InitOs)
 <LI><a href="#[2a]">RCC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[99]">RGB888toGRB565</a> from device_lcd.o(i.RGB888toGRB565) referenced from device_lcd.o(i.LCDInit)
 <LI><a href="#[4e]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[8c]">RTCGetTime</a> from device_rtc.o(i.RTCGetTime) referenced from device_rtc.o(i.InitRTC)
 <LI><a href="#[8b]">RTCTimeSet</a> from device_rtc.o(i.RTCTimeSet) referenced from device_rtc.o(i.InitRTC)
 <LI><a href="#[8b]">RTCTimeSet</a> from device_rtc.o(i.RTCTimeSet) referenced from device_rtc.o(i.RTCTimeSet)
 <LI><a href="#[28]">RTC_IRQHandler</a> from device_rtc.o(i.RTC_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[70]">Register</a> from device_adc.o(i.Register) referenced from device_adc.o(i.InitAdc)
 <LI><a href="#[8d]">RegisterSystick</a> from device_systick.o(i.RegisterSystick) referenced from device_systick.o(i.InitSystick)
 <LI><a href="#[a7]">RemoteDefaults</a> from securintymenu.o(i.RemoteDefaults) referenced from securintymenu.o(i.SecurintyInit)
 <LI><a href="#[8]">RemoteTypeAddr</a> from zonemenu.o(i.RemoteTypeAddr) referenced 2 times from menulist.o(.data)
 <LI><a href="#[1b]">Reset_Handler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[c]">RingTimesSetup</a> from setupmenu.o(i.RingTimesSetup) referenced 2 times from menulist.o(.data)
 <LI><a href="#[56]">SDIO_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[a3]">SMSSendDelay</a> from wirelessprocess.o(i.SMSSendDelay) referenced from wirelessprocess.o(i.RemoteAlawyAndStayProcess)
 <LI><a href="#[48]">SPI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[49]">SPI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[58]">SPI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[21]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[a4]">ScreenTimeSet</a> from screensavertime.o(i.ScreenTimeSet) referenced from screensavertime.o(i.ScreenPointerInit)
 <LI><a href="#[68]">SendWirelessData</a> from device_wireless.o(i.SendWirelessData) referenced from wirelessprocess.o(i.DelayArmProcess)
 <LI><a href="#[68]">SendWirelessData</a> from device_wireless.o(i.SendWirelessData) referenced from tasklogic.o(i.KeyProcess)
 <LI><a href="#[68]">SendWirelessData</a> from device_wireless.o(i.SendWirelessData) referenced from wirelessprocess.o(i.RemoteAlarmProcess)
 <LI><a href="#[68]">SendWirelessData</a> from device_wireless.o(i.SendWirelessData) referenced from wirelessprocess.o(i.RemoteAlawyAndStayProcess)
 <LI><a href="#[68]">SendWirelessData</a> from device_wireless.o(i.SendWirelessData) referenced from wirelessprocess.o(i.UnlockProcess)
 <LI><a href="#[ad]">SirenDi</a> from device_voice.o(i.SirenDi) referenced from device_voice.o(i.VoicePortInit)
 <LI><a href="#[4]">SirenStateSave</a> from zonemenu.o(i.SirenStateSave) referenced 2 times from menulist.o(.data)
 <LI><a href="#[5]">SirneState</a> from zonemenu.o(i.SirneState) referenced 2 times from menulist.o(.data)
 <LI><a href="#[87]">Start</a> from os.o(i.Start) referenced from os.o(i.InitOs)
 <LI><a href="#[8e]">Start</a> from device_timer.o(i.Start) referenced from device_timer.o(i.InitTimer)
 <LI><a href="#[8f]">Stop</a> from device_timer.o(i.Stop) referenced from device_timer.o(i.InitTimer)
 <LI><a href="#[6d]">StrinPrintf</a> from device_gsm.o(i.StrinPrintf) referenced from device_gsm.o(i.GsmInit)
 <LI><a href="#[7e]">SwitchTextBoxFocusDown</a> from systemgui.o(i.SwitchTextBoxFocusDown) referenced from systemgui.o(i.InitGui)
 <LI><a href="#[7f]">SwitchTextBoxFocusUp</a> from systemgui.o(i.SwitchTextBoxFocusUp) referenced from systemgui.o(i.InitGui)
 <LI><a href="#[24]">SysTick_Handler</a> from device_systick.o(i.SysTick_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[62]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[94]">SystemSet</a> from systemset.o(i.SystemSet) referenced from systemset.o(i.InitsystemApp)
 <LI><a href="#[aa]">SystickRoutine</a> from os.o(i.SystickRoutine) referenced from os.o(i.Start)
 <LI><a href="#[27]">TAMPER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3d]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[40]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3f]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3e]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[41]">TIM2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[42]">TIM3_IRQHandler</a> from device_gsm.o(i.TIM3_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[43]">TIM4_IRQHandler</a> from device_call.o(i.TIM4_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[57]">TIM5_IRQHandler</a> from device_frequency.o(i.TIM5_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5b]">TIM6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5c]">TIM7_IRQHandler</a> from device_wireless.o(i.TIM7_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[50]">TIM8_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[53]">TIM8_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[52]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[51]">TIM8_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[59]">UART4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5a]">UART5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4a]">USART1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4b]">USART2_IRQHandler</a> from device_gsm.o(i.USART2_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4c]">USART3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4f]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[38]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[39]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[20]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[25]">WWDG_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[d]">WatiFunc</a> from securintymenu.o(i.WatiFunc) referenced 2 times from menulist.o(.data)
 <LI><a href="#[b1]">WirelessDecode</a> from device_wireless.o(i.WirelessDecode) referenced from device_wireless.o(i.WirelessPortInit)
 <LI><a href="#[0]">WirelessOpen</a> from taskmenu.o(i.WirelessOpen) referenced 2 times from menulist.o(.data)
 <LI><a href="#[b2]">WirelessSendPacket</a> from device_wireless.o(i.WirelessSendPacket) referenced from device_wireless.o(i.WirelessPortInit)
 <LI><a href="#[92]">WriteByteToUsart2</a> from device_usart.o(i.WriteByteToUsart2) referenced from device_usart.o(i.InitUsart)
 <LI><a href="#[93]">WriteToUsart2</a> from device_usart.o(i.WriteToUsart2) referenced from device_usart.o(i.InitUsart)
 <LI><a href="#[3]">ZoneAttributeProcess</a> from zonemenu.o(i.ZoneAttributeProcess) referenced 2 times from menulist.o(.data)
 <LI><a href="#[2]">ZoneAttributeSave</a> from zonemenu.o(i.ZoneAttributeSave) referenced 2 times from menulist.o(.data)
 <LI><a href="#[a8]">ZoneDefaults</a> from securintymenu.o(i.ZoneDefaults) referenced from securintymenu.o(i.SecurintyInit)
 <LI><a href="#[1]">ZoneWirelessClose</a> from zonemenu.o(i.ZoneWirelessClose) referenced 4 times from menulist.o(.data)
 <LI><a href="#[f1]">_CalcSizeOfChar</a> from gui_uc_encodenone.o(i._CalcSizeOfChar) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[d6]">_Color2IndexBulk</a> from guicc_m565.o(i._Color2IndexBulk) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[f6]">_Color2Index_0</a> from guicc_0.o(i._Color2Index_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[d3]">_Color2Index_M565</a> from guicc_m565.o(i._Color2Index_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[c7]">_DrawBitmap</a> from guidrv_template.o(i._DrawBitmap) referenced 2 times from guidrv_template.o(.constdata)
 <LI><a href="#[da]">_DrawBitmap_RLE8</a> from lcd_rle8.o(i._DrawBitmap_RLE8) referenced from lcd_rle8.o(.constdata)
 <LI><a href="#[c8]">_DrawHLine</a> from guidrv_template.o(i._DrawHLine) referenced 2 times from guidrv_template.o(.constdata)
 <LI><a href="#[6a]">_DrawHLine</a> from guiaa_lib.o(i._DrawHLine) referenced from guiaa_lib.o(i.GUI_AA_Init)
 <LI><a href="#[c9]">_DrawVLine</a> from guidrv_template.o(i._DrawVLine) referenced 2 times from guidrv_template.o(.constdata)
 <LI><a href="#[f2]">_Encode</a> from gui_uc_encodenone.o(i._Encode) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[ca]">_FillRect</a> from guidrv_template.o(i._FillRect) referenced 2 times from guidrv_template.o(.constdata)
 <LI><a href="#[b3]">_GetByte_pPixel</a> from lcd_rle8.o(i._GetByte_pPixel) referenced from lcd_rle8.o(i._DrawBitmap_RLE8)
 <LI><a href="#[ef]">_GetCharCode</a> from gui_uc_encodenone.o(i._GetCharCode) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[f0]">_GetCharSize</a> from gui_uc_encodenone.o(i._GetCharSize) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[d1]">_GetDevData</a> from guidrv_template.o(i._GetDevData) referenced 2 times from guidrv_template.o(.constdata)
 <LI><a href="#[cf]">_GetDevFunc</a> from guidrv_template.o(i._GetDevFunc) referenced 2 times from guidrv_template.o(.constdata)
 <LI><a href="#[d0]">_GetDevProp</a> from guidrv_template.o(i._GetDevProp) referenced 2 times from guidrv_template.o(.constdata)
 <LI><a href="#[f8]">_GetIndexMask_0</a> from guicc_0.o(i._GetIndexMask_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[d5]">_GetIndexMask_M565</a> from guicc_m565.o(i._GetIndexMask_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[cb]">_GetPixelIndex</a> from guidrv_template.o(i._GetPixelIndex) referenced 2 times from guidrv_template.o(.constdata)
 <LI><a href="#[d2]">_GetRect</a> from guidrv_template.o(i._GetRect) referenced 2 times from guidrv_template.o(.constdata)
 <LI><a href="#[d7]">_Index2ColorBulk</a> from guicc_m565.o(i._Index2ColorBulk) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[f7]">_Index2Color_0</a> from guicc_0.o(i._Index2Color_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[b8]">_Init</a> from guidrv_template.o(i._Init) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[17]">_Log2VisBuffered</a> from gui_charline.o(i._Log2VisBuffered) referenced 2 times from gui_charline.o(.data)
 <LI><a href="#[ba]">_Off</a> from guidrv_template.o(i._Off) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[b9]">_On</a> from guidrv_template.o(i._On) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[69]">_OnExit</a> from guiaa_lib.o(i._OnExit) referenced from guiaa_lib.o(i.GUI_AA_Init)
 <LI><a href="#[6b]">_OnExit</a> from gui_core.o(i._OnExit) referenced from gui_core.o(i.GUI__Config)
 <LI><a href="#[9e]">_OnExit</a> from lcd_color.o(i._OnExit) referenced from lcd_color.o(i.LCD_InitColors)
 <LI><a href="#[af]">_OnExit</a> from wm.o(i._OnExit) referenced from wm.o(i.WM_Init)
 <LI><a href="#[bd]">_OnExit</a> from gui_alloc.o(i._OnExit) referenced from gui_alloc.o(i._InitOnce)
 <LI><a href="#[f4]">_SetBkColor</a> from lcd.o(i._SetBkColor) referenced from lcd.o(.constdata)
 <LI><a href="#[f3]">_SetColor</a> from lcd.o(i._SetColor) referenced from lcd.o(.constdata)
 <LI><a href="#[f5]">_SetDrawMode</a> from lcd.o(i._SetDrawMode) referenced from lcd.o(.constdata)
 <LI><a href="#[bb]">_SetLUTEntry</a> from guidrv_template.o(i._SetLUTEntry) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[ce]">_SetOrg</a> from guidrv_template.o(i._SetOrg) referenced 2 times from guidrv_template.o(.constdata)
 <LI><a href="#[cc]">_SetPixelIndex</a> from guidrv_template.o(i._SetPixelIndex) referenced 2 times from guidrv_template.o(.constdata)
 <LI><a href="#[b7]">_SetSize</a> from guidrv_template.o(i._SetSize) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[b5]">_SetVRAMAddr</a> from guidrv_template.o(i._SetVRAMAddr) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[b6]">_SetVSize</a> from guidrv_template.o(i._SetVSize) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[cd]">_XorPixel</a> from guidrv_template.o(i._XorPixel) referenced 2 times from guidrv_template.o(.constdata)
 <LI><a href="#[63]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[bf]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0vsnprintf)
 <LI><a href="#[be]">_sputc</a> from printf8.o(i._sputc) referenced from printf8.o(i.__0sprintf$8)
 <LI><a href="#[ae]">cbBackWin</a> from wm.o(i.cbBackWin) referenced from wm.o(i.WM_Init)
 <LI><a href="#[61]">main</a> from app.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[63]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[3a4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[f9]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[117]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3a5]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[3a6]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[3a7]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[3a8]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[3a9]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[23]"></a>PendSV_Handler</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, os.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23c]"></a>InitPsp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, os.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOs
</UL>

<P><STRONG><a name="[1b]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3aa]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[160]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CodeWirelessOpen
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmInit
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[17e]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteProcess
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetectorProcess
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>

<P><STRONG><a name="[378]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
</UL>

<P><STRONG><a name="[3ab]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[3ac]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[fc]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuotoDisarmArmSet
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoArmDisarmDefaults
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZoneDefaults
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDefault
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelectorDeleteAll
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeletPhone
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteSet
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllRemote
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateLabel
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONListUpdate
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[3ad]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3ae]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[fb]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SingParse
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteAlawyAndStayProcess
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelAlarm
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextBoxSaveProcess
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFormData
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteKey
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallAlarming
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisarmSms
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmSms
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteAlarmProcess
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmProcess
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextBox
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModifyTextBoxData
</UL>

<P><STRONG><a name="[138]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCancel
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockProcess
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageProcess
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneTypeTotal
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfToneGet
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfProcess
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateTimeSet
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNumber
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteProcess
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetectorProcess
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialBufferClean
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoArmDisarmDefaults
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZoneDefaults
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteDefaults
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDefault
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteRemoteCancel
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelectorDeleteCancel
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZoneSet
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingTimesSet
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrinPrintf
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmATSend
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmSendSMS
</UL>

<P><STRONG><a name="[3af]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[fd]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[20a]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneTypeTotal
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmStateProcess
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmStringCheckString
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmRxdTime
</UL>

<P><STRONG><a name="[126]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCancel
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextBoxSaveProcess
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnglishConvert
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteProcess
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteAlarmProcess
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetectorProcess
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmProcess
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CodeWirelessOpen
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZoneSet
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadSecurityCenter
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemState
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemContacts
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteSet
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmOrDisarmReport
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrinPrintf
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmRxdTime
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateLabel
</UL>

<P><STRONG><a name="[361]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[fe]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SirenTimeSet
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSReply
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingTimesSet
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelaySet
</UL>

<P><STRONG><a name="[101]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcSystick100Routine
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[104]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[105]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[143]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryDisplay
</UL>

<P><STRONG><a name="[106]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcSystick100Routine
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[108]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcSystick100Routine
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreqSample
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[10a]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcSystick100Routine
</UL>

<P><STRONG><a name="[10b]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreqSample
</UL>

<P><STRONG><a name="[144]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallRingSystick1000Routine
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryDisplay
</UL>

<P><STRONG><a name="[123]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcSystick100Routine
</UL>

<P><STRONG><a name="[10c]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcSystick100Routine
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreqSample
</UL>

<P><STRONG><a name="[3b0]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[386]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[10d]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[100]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[3b1]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[102]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[109]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[107]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[112]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[114]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[115]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[116]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[381]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[fa]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[3b2]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[3b3]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[10e]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[3b4]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[3b5]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[110]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[111]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[118]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[3b6]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[3b7]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[237]"></a>ADC_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
</UL>

<P><STRONG><a name="[119]"></a>ADC_DeInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, stm32f10x_adc.o(i.ADC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
</UL>

<P><STRONG><a name="[23b]"></a>ADC_GetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_GetCalibrationStatus))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
</UL>

<P><STRONG><a name="[207]"></a>ADC_GetConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_GetConversionValue))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAdcValue
</UL>

<P><STRONG><a name="[206]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAdcValue
</UL>

<P><STRONG><a name="[239]"></a>ADC_GetResetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_GetResetCalibrationStatus))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
</UL>

<P><STRONG><a name="[236]"></a>ADC_Init</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f10x_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
</UL>

<P><STRONG><a name="[204]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, stm32f10x_adc.o(i.ADC_RegularChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAdcValue
</UL>

<P><STRONG><a name="[238]"></a>ADC_ResetCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_ResetCalibration))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
</UL>

<P><STRONG><a name="[205]"></a>ADC_SoftwareStartConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_SoftwareStartConvCmd))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAdcValue
</UL>

<P><STRONG><a name="[23a]"></a>ADC_StartCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_StartCalibration))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
</UL>

<P><STRONG><a name="[11b]"></a>AW8377SetMode</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, device_voice.o(i.AW8377SetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = AW8377SetMode &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePortInit
</UL>

<P><STRONG><a name="[11d]"></a>AboutInfoDisp</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, aboutmemu.o(i.AboutInfoDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = AboutInfoDisp &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateLabel
</UL>

<P><STRONG><a name="[134]"></a>AboutMenuInit</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, aboutmemu.o(i.AboutMenuInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AboutMenuInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllMenuListInit
</UL>

<P><STRONG><a name="[71]"></a>AdcSystick100Routine</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, device_adc.o(i.AdcSystick100Routine))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = AdcSystick100Routine &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAdcValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_adc.o(i.InitAdc)
</UL>
<P><STRONG><a name="[21f]"></a>AlarmCallCount</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, eventprocess.o(i.AlarmCallCount))
<BR><BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmStateProcess
</UL>

<P><STRONG><a name="[a9]"></a>AlarmSirenClose</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wirelessprocess.o(i.AlarmSirenClose))
<BR>[Address Reference Count : 1]<UL><LI> wirelessprocess.o(i.SirenAlarm)
</UL>
<P><STRONG><a name="[12a]"></a>AllMenuListInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, taskmenu.o(i.AllMenuListInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AllMenuListInit &rArr; SettingTab &rArr; SetupSMSFunc
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceInit
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTab
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecurintyInit
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteInit
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMenuInit
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactsTab
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallInit
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutMenuInit
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StandbyMenu
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmFormInit
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>

<P><STRONG><a name="[67]"></a>ArmSms</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, wirelessprocess.o(i.ArmSms))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ArmSms &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wirelessprocess.o(i.DelayArmProcess)
</UL>
<P><STRONG><a name="[136]"></a>AuotoDisarmArmSet</STRONG> (Thumb, 274 bytes, Stack size 48 bytes, setupmenu.o(i.AuotoDisarmArmSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = AuotoDisarmArmSet &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormFocusProcessMenu
</UL>

<P><STRONG><a name="[11]"></a>AutoAddrGet</STRONG> (Thumb, 192 bytes, Stack size 64 bytes, setupmenu.o(i.AutoAddrGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = AutoAddrGet &rArr; ListSearch
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListSearch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[137]"></a>AutoArmDisarmDefaults</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, securintymenu.o(i.AutoArmDisarmDefaults))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = AutoArmDisarmDefaults &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultPara
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultRest
</UL>

<P><STRONG><a name="[139]"></a>AutoArmOrDisarm</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, setupmenu.o(i.AutoArmOrDisarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = AutoArmOrDisarm &rArr; PostMessage &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[13b]"></a>AutoArmOrDisarmProcess</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, tasklogic.o(i.AutoArmOrDisarmProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = AutoArmOrDisarmProcess &rArr; RemoteAlawyAndStayProcess &rArr; LogWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockProcess
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteAlawyAndStayProcess
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogicTask
</UL>

<P><STRONG><a name="[65]"></a>AutoHangUpTime</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, eventprocess.o(i.AutoHangUpTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AutoHangUpTime
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfProcess
</UL>
<BR>[Address Reference Count : 3]<UL><LI> eventprocess.o(i.CidUpload)
<LI> eventprocess.o(i.DtmfProcess)
<LI> eventprocess.o(i.CallRingProcess)
</UL>
<P><STRONG><a name="[13f]"></a>BKP_DeInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f10x_bkp.o(i.BKP_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BKP_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_BackupResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
</UL>

<P><STRONG><a name="[23e]"></a>BKP_ReadBackupRegister</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_bkp.o(i.BKP_ReadBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BKP_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAllInit
</UL>

<P><STRONG><a name="[24b]"></a>BKP_WriteBackupRegister</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f10x_bkp.o(i.BKP_WriteBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BKP_WriteBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAllInit
</UL>

<P><STRONG><a name="[141]"></a>BatteryDisplay</STRONG> (Thumb, 586 bytes, Stack size 32 bytes, systemgui.o(i.BatteryDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = BatteryDisplay &rArr; LCDDrawRectangle &rArr; LCDDrawLine &rArr; LCDDrawPoint &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update
</UL>

<P><STRONG><a name="[145]"></a>BmpDecode</STRONG> (Thumb, 916 bytes, Stack size 120 bytes, bmp.o(i.BmpDecode))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = BmpDecode &rArr; f_open &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pic
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIcon
</UL>

<P><STRONG><a name="[1f]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[14c]"></a>CIDProProcess</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, eventprocess.o(i.CIDProProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = CIDProProcess &rArr; CidUpload &rArr; GetNumber &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneTypeTotal
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CidUpload
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogicTask
</UL>

<P><STRONG><a name="[14f]"></a>CallAlarming</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, eventprocess.o(i.CallAlarming))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = CallAlarming &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNumber
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallProcess
</UL>

<P><STRONG><a name="[25b]"></a>CallHangUp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, callmenu.o(i.CallHangUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CallHangUp
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess
</UL>

<P><STRONG><a name="[12e]"></a>CallInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, callmenu.o(i.CallInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CallInit &rArr; CallMenuInit
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallMenuInit
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialMenuInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllMenuListInit
</UL>

<P><STRONG><a name="[154]"></a>CallMenuInit</STRONG> (Thumb, 328 bytes, Stack size 8 bytes, callmenu.o(i.CallMenuInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CallMenuInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallInit
</UL>

<P><STRONG><a name="[155]"></a>CallMessageSystick100Routine</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, eventprocess.o(i.CallMessageSystick100Routine))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = CallMessageSystick100Routine &rArr; PostMessage &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[156]"></a>CallProcess</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, eventprocess.o(i.CallProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = CallProcess &rArr; CallAlarming &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneTypeTotal
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallAlarming
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogicTask
</UL>

<P><STRONG><a name="[157]"></a>CallRingProcess</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, eventprocess.o(i.CallRingProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CallRingProcess
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogicTask
</UL>

<P><STRONG><a name="[158]"></a>CallRingSystick1000Routine</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, device_call.o(i.CallRingSystick1000Routine))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = CallRingSystick1000Routine &rArr; PostMessage &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostMessage
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreqSample
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[220]"></a>CidDataProcess</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, eventprocess.o(i.CidDataProcess))
<BR><BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmStateProcess
</UL>

<P><STRONG><a name="[15d]"></a>CidMessageSystick100Routine</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, eventprocess.o(i.CidMessageSystick100Routine))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = CidMessageSystick100Routine &rArr; PostMessage &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[14e]"></a>CidUpload</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, eventprocess.o(i.CidUpload))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = CidUpload &rArr; GetNumber &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CIDProProcess
</UL>

<P><STRONG><a name="[7]"></a>CodeWirelessOpen</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, zonemenu.o(i.CodeWirelessOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CodeWirelessOpen &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[301]"></a>ContactIDMenuInit</STRONG> (Thumb, 810 bytes, Stack size 8 bytes, setupmenu.o(i.ContactIDMenuInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ContactIDMenuInit
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTab
</UL>

<P><STRONG><a name="[2b5]"></a>ContactIDReadData</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, setupmenu.o(i.ContactIDReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ContactIDReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFormData
</UL>

<P><STRONG><a name="[326]"></a>ContactIDSaveData</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, setupmenu.o(i.ContactIDSaveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ContactIDSaveData
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextBoxSaveProcess
</UL>

<P><STRONG><a name="[19b]"></a>ContactIDSeting</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, setupmenu.o(i.ContactIDSeting))
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormFocusProcessMenu
</UL>

<P><STRONG><a name="[12d]"></a>ContactsTab</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, phonemenu.o(i.ContactsTab))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ContactsTab &rArr; ContactsEdit
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactsSetupList
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactsListInit
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactsEdit
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactsDelFomInit
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddContacts
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllMenuListInit
</UL>

<P><STRONG><a name="[33]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, spi.o(i.DMA1_Channel4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, device_gsm.o(i.DMA1_Channel6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel6_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[20d]"></a>DMA_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmDMAEnable
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2CmdSend
</UL>

<P><STRONG><a name="[168]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel6_IRQHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
</UL>

<P><STRONG><a name="[169]"></a>DMA_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmDMASendConfig
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmDMAEnable
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel6_IRQHandler
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2CmdSend
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPIRxDMA
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
</UL>

<P><STRONG><a name="[211]"></a>DMA_DeInit</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmDMASendConfig
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPITxDMA
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPIRxDMA
</UL>

<P><STRONG><a name="[213]"></a>DMA_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmDMASendConfig
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPIRxDMA
</UL>

<P><STRONG><a name="[212]"></a>DMA_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmDMASendConfig
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPITxDMA
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPIRxDMA
</UL>

<P><STRONG><a name="[20e]"></a>DMA_SetCurrDataCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_SetCurrDataCounter))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmDMAEnable
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2CmdSend
</UL>

<P><STRONG><a name="[16b]"></a>DTMF9270Decode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_call.o(i.DTMF9270Decode))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMFSystick1000Routine
</UL>

<P><STRONG><a name="[16a]"></a>DTMFSystick1000Routine</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, device_call.o(i.DTMFSystick1000Routine))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = DTMFSystick1000Routine &rArr; PostMessage &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostMessage
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMF9270Decode
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[298]"></a>DateUpdateProcess</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasklogic.o(i.DateUpdateProcess))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogicTask
</UL>

<P><STRONG><a name="[16d]"></a>DcDetInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp.o(i.DcDetInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DcDetInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeviceInit
</UL>

<P><STRONG><a name="[22]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>DefaultRest</STRONG> (Thumb, 274 bytes, Stack size 8 bytes, securintymenu.o(i.DefaultRest))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = DefaultRest &rArr; ZoneDefaults &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmPowe
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogDefaults
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoArmDisarmDefaults
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZoneDefaults
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInitParameter
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteDefaults
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDefault
</UL>
<BR>[Address Reference Count : 1]<UL><LI> securintymenu.o(i.DefaultsSetup)
</UL>
<P><STRONG><a name="[f]"></a>DefaultsSetup</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, securintymenu.o(i.DefaultsSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DefaultsSetup
</UL>
<BR>[Address Reference Count : 2]<UL><LI> securintymenu.o(i.SecurintyInit)
<LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[175]"></a>Delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system.o(i.Delay))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>

<P><STRONG><a name="[64]"></a>DelayAlarmProcess</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, wirelessprocess.o(i.DelayAlarmProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DelayAlarmProcess &rArr; LogWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SirenAlarm
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wirelessprocess.o(i.AlarmProcess)
</UL>
<P><STRONG><a name="[a2]"></a>DelayArmProcess</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, wirelessprocess.o(i.DelayArmProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DelayArmProcess &rArr; LogWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wirelessprocess.o(i.RemoteAlawyAndStayProcess)
</UL>
<P><STRONG><a name="[152]"></a>DelayMs</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, system.o(i.DelayMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendThreeLines
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenRx
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CidUpload
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallAlarming
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmPowe
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllegalArm
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyInit
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGUIInit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrinPrintf
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmATSend
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmSendSMS
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SirenDi
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDReset
</UL>

<P><STRONG><a name="[11c]"></a>DelayUs</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, system.o(i.DelayUs))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendThreeLines
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICWaitAck
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICStop
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICStart
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICSendByte
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICReadByte
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyRead
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePortInit
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyInit
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AW8377SetMode
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDReadRegister
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessSendBit
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessDecode
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICNAck
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICAck
</UL>

<P><STRONG><a name="[177]"></a>DelectorDeleteAll</STRONG> (Thumb, 184 bytes, Stack size 48 bytes, zonemenu.o(i.DelectorDeleteAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DelectorDeleteAll &rArr; DetectorTotalCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetectorTotalCheck
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelectorDeleteCancel
</UL>

<P><STRONG><a name="[6]"></a>DelectorDeleteCancel</STRONG> (Thumb, 516 bytes, Stack size 48 bytes, zonemenu.o(i.DelectorDeleteCancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DelectorDeleteCancel &rArr; DelectorDeleteAll &rArr; DetectorTotalCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelectorDeleteAll
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteZonedetector
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>DeleteCancel</STRONG> (Thumb, 570 bytes, Stack size 88 bytes, phonemenu.o(i.DeleteCancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DeleteCancel &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListSearch
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>DeleteRemoteCancel</STRONG> (Thumb, 518 bytes, Stack size 56 bytes, zonemenu.o(i.DeleteRemoteCancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DeleteRemoteCancel &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[182]"></a>DetectorAddrID</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, wirelessprocess.o(i.DetectorAddrID))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DetectorAddrID
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetectorProcess
</UL>

<P><STRONG><a name="[178]"></a>DetectorTotalCheck</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, zonemenu.o(i.DetectorTotalCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DetectorTotalCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelectorDeleteAll
</UL>

<P><STRONG><a name="[358]"></a>DetectorValueCheck</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, wirelessprocess.o(i.DetectorValueCheck))
<BR><BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessProcess
</UL>

<P><STRONG><a name="[12]"></a>DialBufferClean</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, callmenu.o(i.DialBufferClean))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DialBufferClean &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[ac]"></a>DisarmSms</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, wirelessprocess.o(i.DisarmSms))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DisarmSms &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wirelessprocess.o(i.UnlockProcess)
</UL>
<P><STRONG><a name="[185]"></a>DrawSwitch</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, systemgui.o(i.DrawSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = DrawSwitch &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchListUpdate
</UL>

<P><STRONG><a name="[188]"></a>DtmfProcess</STRONG> (Thumb, 680 bytes, Stack size 72 bytes, eventprocess.o(i.DtmfProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = DtmfProcess &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendThreeLines
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogWrite
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoHangUpTime
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogicTask
</UL>

<P><STRONG><a name="[18a]"></a>DtmfToneGet</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, callmenu.o(i.DtmfToneGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DtmfToneGet &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess
</UL>

<P><STRONG><a name="[18b]"></a>EnglishConvert</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, device_gsm.o(i.EnglishConvert))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EnglishConvert &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageProcess
</UL>

<P><STRONG><a name="[18c]"></a>FLASH_ErasePage</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f10x_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogDefaults
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWrite
</UL>

<P><STRONG><a name="[18f]"></a>FLASH_GetBank1Status</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_GetBank1Status))
<BR><BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[191]"></a>FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogDefaults
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashLock
</UL>

<P><STRONG><a name="[18e]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f10x_flash.o(i.FLASH_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteNoCheck
</UL>

<P><STRONG><a name="[195]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogDefaults
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashUnlock
</UL>

<P><STRONG><a name="[18d]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f10x_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetBank1Status
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[265]"></a>FSMC_NORSRAMCmd</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(i.FSMC_NORSRAMCmd))
<BR><BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDFSMCInit
</UL>

<P><STRONG><a name="[264]"></a>FSMC_NORSRAMInit</STRONG> (Thumb, 230 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(i.FSMC_NORSRAMInit))
<BR><BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDFSMCInit
</UL>

<P><STRONG><a name="[73]"></a>FlashReadData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, device_flash.o(i.FlashReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FlashReadData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_flash.o(i.InitFlash)
</UL>
<P><STRONG><a name="[193]"></a>FlashReadHalfWord</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, device_flash.o(i.FlashReadHalfWord))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashRead
</UL>

<P><STRONG><a name="[72]"></a>FlashWrite</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, device_flash.o(i.FlashWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = FlashWrite &rArr; FlashWriteNoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteNoCheck
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashUnlock
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashRead
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_flash.o(i.InitFlash)
</UL>
<P><STRONG><a name="[a5]"></a>FocusFormReturn</STRONG> (Thumb, 522 bytes, Stack size 16 bytes, screensavertime.o(i.FocusFormReturn))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FocusFormReturn &rArr; WirelessOpen &rArr; StandbyStateGet &rArr; StandbyMenu
</UL>
<BR>[Calls]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessOpen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screensavertime.o(i.ScreenTimeSet)
</UL>
<P><STRONG><a name="[159]"></a>FreqSample</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, device_frequency.o(i.FreqSample))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FreqSample &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallRingSystick1000Routine
</UL>

<P><STRONG><a name="[1a1]"></a>GL_DrawBitmap</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, gui_drawbitmap.o(i.GL_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>

<P><STRONG><a name="[1a4]"></a>GL_FillCircleAA_HiRes</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, guiaa_circle.o(i.GL_FillCircleAA_HiRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GL_FillCircleAA_HiRes &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
</UL>

<P><STRONG><a name="[16f]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICInit
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessPortInit
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePortInit
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlashInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDInit
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUsart
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DcDetInit
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmGPIOInit
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDGPIOInit
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[321]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemState
</UL>

<P><STRONG><a name="[2df]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WAKEUP
</UL>

<P><STRONG><a name="[225]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICInit
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlashInit
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WAKEUP
</UL>

<P><STRONG><a name="[df]"></a>GUIMONO_DispChar</STRONG> (Thumb, 304 bytes, Stack size 104 bytes, gui_charm.o(i.GUIMONO_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUIMONO_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Address Reference Count : 4]<UL><LI> f6x8.o(.constdata)
<LI> fd24x32.o(.constdata)
<LI> f8x16.o(.constdata)
<LI> f8x16.o(.constdata)
</UL>
<P><STRONG><a name="[e0]"></a>GUIMONO_GetCharDistX</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetCharDistX))
<BR>[Address Reference Count : 4]<UL><LI> f6x8.o(.constdata)
<LI> fd24x32.o(.constdata)
<LI> f8x16.o(.constdata)
<LI> f8x16.o(.constdata)
</UL>
<P><STRONG><a name="[e1]"></a>GUIMONO_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetFontInfo))
<BR>[Address Reference Count : 4]<UL><LI> f6x8.o(.constdata)
<LI> fd24x32.o(.constdata)
<LI> f8x16.o(.constdata)
<LI> f8x16.o(.constdata)
</UL>
<P><STRONG><a name="[e2]"></a>GUIMONO_IsInFont</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_IsInFont))
<BR>[Address Reference Count : 4]<UL><LI> f6x8.o(.constdata)
<LI> fd24x32.o(.constdata)
<LI> f8x16.o(.constdata)
<LI> f8x16.o(.constdata)
</UL>
<P><STRONG><a name="[db]"></a>GUIPROP_DispChar</STRONG> (Thumb, 194 bytes, Stack size 56 bytes, gui_charp.o(i.GUIPROP_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUIPROP_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 13]<UL><LI> f13b_1.o(.constdata)
<LI> f16_1.o(.constdata)
<LI> f16_1hk.o(.constdata)
<LI> f16b_1.o(.constdata)
<LI> f20_1.o(.constdata)
<LI> f20_ascii.o(.constdata)
<LI> f24_1.o(.constdata)
<LI> f24_ascii.o(.constdata)
<LI> f32_1.o(.constdata)
<LI> f8x10_ascii.o(.constdata)
<LI> f8x13_1.o(.constdata)
<LI> f8x16_1.o(.constdata)
<LI> fcomic18b_ascii.o(.constdata)
</UL>
<P><STRONG><a name="[dc]"></a>GUIPROP_GetCharDistX</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, gui_charp.o(i.GUIPROP_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUIPROP_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 13]<UL><LI> f13b_1.o(.constdata)
<LI> f16_1.o(.constdata)
<LI> f16_1hk.o(.constdata)
<LI> f16b_1.o(.constdata)
<LI> f20_1.o(.constdata)
<LI> f20_ascii.o(.constdata)
<LI> f24_1.o(.constdata)
<LI> f24_ascii.o(.constdata)
<LI> f32_1.o(.constdata)
<LI> f8x10_ascii.o(.constdata)
<LI> f8x13_1.o(.constdata)
<LI> f8x16_1.o(.constdata)
<LI> fcomic18b_ascii.o(.constdata)
</UL>
<P><STRONG><a name="[dd]"></a>GUIPROP_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP_GetFontInfo))
<BR>[Address Reference Count : 13]<UL><LI> f13b_1.o(.constdata)
<LI> f16_1.o(.constdata)
<LI> f16_1hk.o(.constdata)
<LI> f16b_1.o(.constdata)
<LI> f20_1.o(.constdata)
<LI> f20_ascii.o(.constdata)
<LI> f24_1.o(.constdata)
<LI> f24_ascii.o(.constdata)
<LI> f32_1.o(.constdata)
<LI> f8x10_ascii.o(.constdata)
<LI> f8x13_1.o(.constdata)
<LI> f8x16_1.o(.constdata)
<LI> fcomic18b_ascii.o(.constdata)
</UL>
<P><STRONG><a name="[de]"></a>GUIPROP_IsInFont</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, gui_charp.o(i.GUIPROP_IsInFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUIPROP_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 13]<UL><LI> f13b_1.o(.constdata)
<LI> f16_1.o(.constdata)
<LI> f16_1hk.o(.constdata)
<LI> f16b_1.o(.constdata)
<LI> f20_1.o(.constdata)
<LI> f20_ascii.o(.constdata)
<LI> f24_1.o(.constdata)
<LI> f24_ascii.o(.constdata)
<LI> f32_1.o(.constdata)
<LI> f8x10_ascii.o(.constdata)
<LI> f8x13_1.o(.constdata)
<LI> f8x16_1.o(.constdata)
<LI> fcomic18b_ascii.o(.constdata)
</UL>
<P><STRONG><a name="[1aa]"></a>GUIPROP__FindChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP__FindChar))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_IsInFont
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_GetCharDistX
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[1a7]"></a>GUI_AA_Exit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, guiaa_lib.o(i.GUI_AA_Exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_AA_Exit &rArr; _FlushLine &rArr; LCD_SetPixelAA &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
</UL>

<P><STRONG><a name="[187]"></a>GUI_AA_FillCircle</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, guiaa_circle.o(i.GUI_AA_FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI_AA_FillCircle &rArr; GL_FillCircleAA_HiRes &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_HiRes2Pixel
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSwitch
</UL>

<P><STRONG><a name="[186]"></a>GUI_AA_FillRoundedRect</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, guiaa_fillroundedrect.o(i.GUI_AA_FillRoundedRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI_AA_FillRoundedRect &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRoundedRect
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_HiRes2Pixel
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSwitch
</UL>

<P><STRONG><a name="[1b0]"></a>GUI_AA_HiRes2Pixel</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_HiRes2Pixel))
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
</UL>

<P><STRONG><a name="[1b4]"></a>GUI_AA_Init</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, guiaa_lib.o(i.GUI_AA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CleanLine
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcClipRectHL
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
</UL>

<P><STRONG><a name="[1a5]"></a>GUI_AA_Init_HiRes</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_Init_HiRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
</UL>

<P><STRONG><a name="[1ba]"></a>GUI_ALLOC_AllocNoInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_AllocNoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[1bc]"></a>GUI_ALLOC_AllocZero</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_alloc_alloczero.o(i.GUI_ALLOC_AllocZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[1f8]"></a>GUI_ALLOC_AssignMemory</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_AssignMemory))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[1c0]"></a>GUI_ALLOC_Free</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
</UL>

<P><STRONG><a name="[1cd]"></a>GUI_ALLOC_FreeFixedBlock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_FreeFixedBlock))
<BR><BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
</UL>

<P><STRONG><a name="[1b6]"></a>GUI_ALLOC_GetFixedBlock</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_GetFixedBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
</UL>

<P><STRONG><a name="[1bd]"></a>GUI_ALLOC_LockH</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_LockH))
<BR><BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
</UL>

<P><STRONG><a name="[1f9]"></a>GUI_ALLOC_SetAvBlockSize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_SetAvBlockSize))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[1bf]"></a>GUI_ALLOC_UnlockH</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_UnlockH))
<BR><BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
</UL>

<P><STRONG><a name="[1c6]"></a>GUI_ALLOC_h2p</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_h2p))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>

<P><STRONG><a name="[1d1]"></a>GUI_AddDecShift</STRONG> (Thumb, 142 bytes, Stack size 20 bytes, gui_adddecshift.o(i.GUI_AddDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
</UL>

<P><STRONG><a name="[35d]"></a>GUI_CalcColorDist</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, gui_calccolordist.o(i.GUI_CalcColorDist))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_CalcColorDist
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[c4]"></a>GUI_Clear</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_core.o(i.GUI_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_Clear &rArr; GUI_GotoXY
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emwingui.o(i.emWinInit)
</UL>
<P><STRONG><a name="[1c8]"></a>GUI_ClearRect</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, gui_core.o(i.GUI_ClearRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmSignalTab
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateGsmSignal
</UL>

<P><STRONG><a name="[1c9]"></a>GUI_DEVICE_Create</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gui_device.o(i.GUI_DEVICE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
</UL>

<P><STRONG><a name="[1ca]"></a>GUI_DEVICE_CreateAndLink</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_device.o(i.GUI_DEVICE_CreateAndLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[1cc]"></a>GUI_DEVICE_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[1cb]"></a>GUI_DEVICE_Link</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, gui_device.o(i.GUI_DEVICE_Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
</UL>

<P><STRONG><a name="[1ce]"></a>GUI_DEVICE_Unlink</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Unlink))
<BR><BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>

<P><STRONG><a name="[203]"></a>GUI_DEVICE__GetpDriver</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE__GetpDriver))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
</UL>

<P><STRONG><a name="[1d0]"></a>GUI_DispDecAt</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, gui_val.o(i.GUI_DispDecAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAutoDigit
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDisplay
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogListUpdate
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextBox
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateLabel
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextListUpdate
</UL>

<P><STRONG><a name="[121]"></a>GUI_DispString</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, gui_dispstring.o(i.GUI_DispString))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutInfoDisp
</UL>

<P><STRONG><a name="[c0]"></a>GUI_DispStringAt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_dispstringat.o(i.GUI_DispStringAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutInfoDisp
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogoDisplay
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDisplay
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSwitch
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextBox
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateGsmSignal
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emwingui.o(i.emWinInit)
</UL>
<P><STRONG><a name="[1d8]"></a>GUI_DispStringHCenterAt</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gui_dispstringhcenter.o(i.GUI_DispStringHCenterAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordFormUpdata
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateLabel
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIcon
</UL>

<P><STRONG><a name="[11e]"></a>GUI_DrawBitmap</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, gui_drawbitmap.o(i.GUI_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutInfoDisp
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogoDisplay
</UL>

<P><STRONG><a name="[184]"></a>GUI_DrawRect</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, gui_2dlib.o(i.GUI_DrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCheckBox
</UL>

<P><STRONG><a name="[183]"></a>GUI_FillRect</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, gui_fillrect.o(i.GUI_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAutoDigit
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCheckBox
</UL>

<P><STRONG><a name="[379]"></a>GUI_GetBitsPerPixelEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetBitsPerPixelEx))
<BR><BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[1ac]"></a>GUI_GetBkColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_getcolor.o(i.GUI_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetBkColor
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[1fe]"></a>GUI_GetCharDistX</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetCharDistX))
<BR><BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>

<P><STRONG><a name="[200]"></a>GUI_GetCharDistXEx</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetCharDistXEx))
<BR><BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
</UL>

<P><STRONG><a name="[1ab]"></a>GUI_GetColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_getcolor.o(i.GUI_GetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[1d2]"></a>GUI_GetFontDistY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetFontDistY))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[1d3]"></a>GUI_GetYAdjust</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetYAdjust))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[37b]"></a>GUI_GetpfColor2IndexEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfColor2IndexEx))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[37a]"></a>GUI_GetpfIndex2ColorEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfIndex2ColorEx))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[1c7]"></a>GUI_GotoXY</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gui_goto.o(i.GUI_GotoXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_GotoXY
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoY
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoX
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>

<P><STRONG><a name="[1e0]"></a>GUI_Init</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, gui_core.o(i.GUI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GUI_Init &rArr; WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGUIInit
</UL>

<P><STRONG><a name="[1e7]"></a>GUI_MEMDEV_Delete</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_MEMDEV_Delete &rArr; GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>

<P><STRONG><a name="[1ea]"></a>GUI_MEMDEV_GetBitsPerPixel</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_MEMDEV_GetBitsPerPixel &rArr; LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[1ec]"></a>GUI_MEMDEV_GetDataPtr</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, guidev_getdataptr.o(i.GUI_MEMDEV_GetDataPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetDataPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[bc]"></a>GUI_MEMDEV__WriteToActiveOpaque</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[377]"></a>GUI_MergeRect</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gui_mergerect.o(i.GUI_MergeRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MergeRect
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[350]"></a>GUI_MoveRect</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_moverect.o(i.GUI_MoveRect))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>

<P><STRONG><a name="[360]"></a>GUI_RectsIntersect</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_rectsintersect.o(i.GUI_RectsIntersect))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[1e8]"></a>GUI_SelectLCD</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_selectlcd.o(i.GUI_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[1f2]"></a>GUI_SelectLayer</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SelectLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
</UL>

<P><STRONG><a name="[c2]"></a>GUI_SetBkColor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setcolor.o(i.GUI_SetBkColor))
<BR><BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutInfoDisp
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAutoDigit
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextBox
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateLabel
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateGsmSignal
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emwingui.o(i.emWinInit)
</UL>
<P><STRONG><a name="[c3]"></a>GUI_SetColor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setcolor.o(i.GUI_SetColor))
<BR><BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutInfoDisp
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogoDisplay
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAutoDigit
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDisplay
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordFormUpdata
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogListUpdate
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSwitch
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextBox
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateLabel
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIcon
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateGsmSignal
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateArCheckBox
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextListUpdate
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchListUpdate
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONListUpdate
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCheckBox
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckListUpdate
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emwingui.o(i.emWinInit)
</UL>
<P><STRONG><a name="[1fa]"></a>GUI_SetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_core.o(i.GUI_SetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[1a2]"></a>GUI_SetDrawMode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setdrawmode.o(i.GUI_SetDrawMode))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
</UL>

<P><STRONG><a name="[120]"></a>GUI_SetFont</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_setfont.o(i.GUI_SetFont))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutInfoDisp
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogoDisplay
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAutoDigit
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDisplay
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordFormUpdata
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogListUpdate
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSwitch
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextBox
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateLabel
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIcon
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateGsmSignal
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateArCheckBox
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextListUpdate
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchListUpdate
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONListUpdate
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckListUpdate
</UL>

<P><STRONG><a name="[1e5]"></a>GUI_SetOrg</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_setorg.o(i.GUI_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_SetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[c1]"></a>GUI_SetPenSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_pen.o(i.GUI_SetPenSize))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSwitch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emwingui.o(i.emWinInit)
</UL>
<P><STRONG><a name="[1d9]"></a>GUI_SetTextAlign</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_settextalign.o(i.GUI_SetTextAlign))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>

<P><STRONG><a name="[11f]"></a>GUI_SetTextMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_settextmode.o(i.GUI_SetTextMode))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutInfoDisp
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogoDisplay
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAutoDigit
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDisplay
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordFormUpdata
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogListUpdate
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSwitch
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextBox
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateLabel
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIcon
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateGsmSignal
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateArCheckBox
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextListUpdate
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchListUpdate
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONListUpdate
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckListUpdate
</UL>

<P><STRONG><a name="[1f6]"></a>GUI_SignalEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_waitevent.o(i.GUI_SignalEvent))
<BR><BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[1f5]"></a>GUI_StoreKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_onkey.o(i.GUI_StoreKey))
<BR><BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[1fd]"></a>GUI_UC__GetCharCodeInc</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__GetCharCodeInc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>

<P><STRONG><a name="[1d7]"></a>GUI_UC__NumChars2NumBytes</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__NumChars2NumBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[369]"></a>GUI_USAGE_AddRect</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidev_usage.o(i.GUI_USAGE_AddRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[1e9]"></a>GUI_USAGE_DecUseCnt</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidev_usage.o(i.GUI_USAGE_DecUseCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[1f7]"></a>GUI_X_Config</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guiconf.o(i.GUI_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_X_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefaultFont
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_SetAvBlockSize
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AssignMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[1a]"></a>GUI_X_ExecIdle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x.o(i.GUI_X_ExecIdle))
<BR>[Address Reference Count : 1]<UL><LI> gui_waitevent.o(.data)
</UL>
<P><STRONG><a name="[1e2]"></a>GUI_X_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x.o(i.GUI_X_Init))
<BR><BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[35f]"></a>GUI__CompactPixelIndices</STRONG> (Thumb, 296 bytes, Stack size 8 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
</UL>

<P><STRONG><a name="[1e1]"></a>GUI__Config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_core.o(i.GUI__Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI__Config &rArr; LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[1d6]"></a>GUI__DispLine</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[1d5]"></a>GUI__GetLineDistX</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[1d4]"></a>GUI__GetLineNumChars</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[1ff]"></a>GUI__GetOverlap</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_charline.o(i.GUI__GetOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__GetOverlap
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>

<P><STRONG><a name="[347]"></a>GUI__IntersectRect</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gui__intersectrect.o(i.GUI__IntersectRect))
<BR><BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[282]"></a>GUI__IntersectRects</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gui__intersectrects.o(i.GUI__IntersectRects))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[201]"></a>GUI__ManageCache</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__managecache.o(i.GUI__ManageCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>

<P><STRONG><a name="[202]"></a>GUI__ManageCacheEx</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, gui__managecache.o(i.GUI__ManageCacheEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>

<P><STRONG><a name="[18]"></a>GUI__MixColors</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gui__alpha.o(i.GUI__MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColorsBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>GUI__MixColorsBulk</STRONG> (Thumb, 78 bytes, Stack size 36 bytes, gui__alpha.o(i.GUI__MixColorsBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GUI__MixColorsBulk &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[1b7]"></a>GUI__RegisterExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_core.o(i.GUI__RegisterExit))
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
</UL>

<P><STRONG><a name="[1be]"></a>GUI__memset</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, gui__memset.o(i.GUI__memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CleanLine
</UL>

<P><STRONG><a name="[36f]"></a>GUI__memset16</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui__memset16.o(i.GUI__memset16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset16
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[122]"></a>GetAdcValue</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, device_adc.o(i.GetAdcValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GetAdcValue &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCmd
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcSystick100Routine
</UL>

<P><STRONG><a name="[208]"></a>GetChipInfo</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, tasklogic.o(i.GetChipInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetChipInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcByte
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogicTask
</UL>

<P><STRONG><a name="[150]"></a>GetNumber</STRONG> (Thumb, 168 bytes, Stack size 56 bytes, eventprocess.o(i.GetNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = GetNumber &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageProcess
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CidUpload
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallAlarming
</UL>

<P><STRONG><a name="[14d]"></a>GetPhoneTypeTotal</STRONG> (Thumb, 134 bytes, Stack size 56 bytes, wirelessprocess.o(i.GetPhoneTypeTotal))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = GetPhoneTypeTotal &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessProcess
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageProcess
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallProcess
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CIDProProcess
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelAlarm
</UL>

<P><STRONG><a name="[180]"></a>GetZoneNumber</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, wirelessprocess.o(i.GetZoneNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetZoneNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetectorProcess
</UL>

<P><STRONG><a name="[6c]"></a>GsmATSend</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, device_gsm.o(i.GsmATSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GsmATSend &rArr; StrinPrintf &rArr; __c89vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrinPrintf
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmStringCheckString
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Simcom800CInit
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmSendSMS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_gsm.o(i.GsmInit)
</UL>
<P><STRONG><a name="[6f]"></a>GsmCall</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, device_gsm.o(i.GsmCall))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GsmCall &rArr; StrinPrintf &rArr; __c89vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrinPrintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_gsm.o(i.GsmInit)
</UL>
<P><STRONG><a name="[20c]"></a>GsmDMAEnable</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, device_gsm.o(i.GsmDMAEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GsmDMAEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetCurrDataCounter
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrinPrintf
</UL>

<P><STRONG><a name="[20f]"></a>GsmDMASendConfig</STRONG> (Thumb, 212 bytes, Stack size 56 bytes, device_gsm.o(i.GsmDMASendConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GsmDMASendConfig &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmInit
</UL>

<P><STRONG><a name="[217]"></a>GsmInit</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, device_gsm.o(i.GsmInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = GsmInit &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Simcom800CInit
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmPowe
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTime3
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmDMASendConfig
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmATSend
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmGPIOInit
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeviceInit
</UL>

<P><STRONG><a name="[170]"></a>GsmPowe</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, device_gsm.o(i.GsmPowe))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GsmPowe &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultRest
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmInit
</UL>

<P><STRONG><a name="[21b]"></a>GsmSignalTab</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, systemgui.o(i.GsmSignalTab))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GsmSignalTab &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateGsmSignal
</UL>

<P><STRONG><a name="[21c]"></a>GsmStateProcess</STRONG> (Thumb, 938 bytes, Stack size 40 bytes, tasklogic.o(i.GsmStateProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = GsmStateProcess &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SingParse
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Simcom800CInit
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSCountProcess
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CidDataProcess
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmCallCount
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogicTask
</UL>

<P><STRONG><a name="[20b]"></a>GsmStringCheckString</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, device_gsm.o(i.GsmStringCheckString))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GsmStringCheckString &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmATSend
</UL>

<P><STRONG><a name="[1d]"></a>HardFault_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[223]"></a>IICAck</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, device_iic.o(i.IICAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IICAck &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICReadByte
</UL>

<P><STRONG><a name="[224]"></a>IICInit</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, device_iic.o(i.IICInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IICInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyInit
</UL>

<P><STRONG><a name="[226]"></a>IICNAck</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, device_iic.o(i.IICNAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IICNAck &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICReadByte
</UL>

<P><STRONG><a name="[227]"></a>IICReadByte</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, device_iic.o(i.IICReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = IICReadByte &rArr; IICNAck &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICNAck
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICAck
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyRead
</UL>

<P><STRONG><a name="[228]"></a>IICSendByte</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, device_iic.o(i.IICSendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = IICSendByte &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyRead
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyInit
</UL>

<P><STRONG><a name="[229]"></a>IICStart</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, device_iic.o(i.IICStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IICStart &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyRead
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyInit
</UL>

<P><STRONG><a name="[22a]"></a>IICStop</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, device_iic.o(i.IICStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IICStop &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICWaitAck
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyRead
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyInit
</UL>

<P><STRONG><a name="[22b]"></a>IICWaitAck</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, device_iic.o(i.IICWaitAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = IICWaitAck &rArr; IICStop &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICStop
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyRead
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyInit
</UL>

<P><STRONG><a name="[29e]"></a>IconMenuInit</STRONG> (Thumb, 450 bytes, Stack size 16 bytes, taskmenu.o(i.IconMenuInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IconMenuInit
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>

<P><STRONG><a name="[9c]"></a>ImageDraw</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, device_lcd.o(i.ImageDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ImageDraw &rArr; LcdSetWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSetWindow
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteRAMPrepare
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_lcd.o(i.LCDInit)
</UL>
<P><STRONG><a name="[222]"></a>ImageDrawAlpah</STRONG> (Thumb, 646 bytes, Stack size 36 bytes, device_lcd.o(i.ImageDrawAlpah))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ImageDrawAlpah
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDisplay
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordFormUpdata
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogListUpdate
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIcon
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONListUpdate
</UL>

<P><STRONG><a name="[230]"></a>ImageGetColor</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, device_lcd.o(i.ImageGetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ImageGetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageLocalDraw
</UL>

<P><STRONG><a name="[9d]"></a>ImageLocalDraw</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, device_lcd.o(i.ImageLocalDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ImageLocalDraw &rArr; LcdSetWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSetWindow
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteRAMPrepare
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageGetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_lcd.o(i.LCDInit)
</UL>
<P><STRONG><a name="[234]"></a>InitAdc</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, device_adc.o(i.InitAdc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InitAdc &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCalibration
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ResetCalibration
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetResetCalibrationStatus
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationStatus
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADCCLKConfig
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeviceInit
</UL>

<P><STRONG><a name="[316]"></a>InitFlash</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, device_flash.o(i.InitFlash))
<BR><BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeviceInit
</UL>

<P><STRONG><a name="[232]"></a>InitGui</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, systemgui.o(i.InitGui))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[231]"></a>InitOs</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, os.o(i.InitOs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InitOs
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPsp
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[23d]"></a>InitRTC</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, device_rtc.o(i.InitRTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InitRTC &rArr; RTCGetTime &rArr; RTCGetWeek
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_WriteBackupRegister
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_ReadBackupRegister
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_DeInit
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForLastTask
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ITConfig
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCTimeSet
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCGetTime
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCNVICConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeviceInit
</UL>

<P><STRONG><a name="[24d]"></a>InitSPIRxDMA</STRONG> (Thumb, 128 bytes, Stack size 56 bytes, spi.o(i.InitSPIRxDMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = InitSPIRxDMA &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DMACmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[24f]"></a>InitSPITxDMA</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, spi.o(i.InitSPITxDMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InitSPITxDMA &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[311]"></a>InitSystick</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, device_systick.o(i.InitSystick))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = InitSystick
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeviceInit
</UL>

<P><STRONG><a name="[218]"></a>InitTime3</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, device_gsm.o(i.InitTime3))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InitTime3 &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmInit
</UL>

<P><STRONG><a name="[252]"></a>InitTime6</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, device_wireless.o(i.InitTime6))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InitTime6 &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessPortInit
</UL>

<P><STRONG><a name="[315]"></a>InitTimer</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, device_timer.o(i.InitTimer))
<BR><BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeviceInit
</UL>

<P><STRONG><a name="[253]"></a>InitUsart</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, device_usart.o(i.InitUsart))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = InitUsart &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUsartQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeviceInit
</UL>

<P><STRONG><a name="[317]"></a>InitsystemApp</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systemset.o(i.InitsystemApp))
<BR><BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeviceInit
</UL>

<P><STRONG><a name="[13]"></a>KeyPadCallProcess</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, callmenu.o(i.KeyPadCallProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KeyPadCallProcess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[259]"></a>KeyProcess</STRONG> (Thumb, 580 bytes, Stack size 24 bytes, tasklogic.o(i.KeyProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = KeyProcess &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockProcess
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SirenAlarm
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteAlawyAndStayProcess
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogWrite
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfToneGet
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallHangUp
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordStart
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayStart
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyTone
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormProcessEnter
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormFocusProcessUP
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormFocusProcessReturn
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormFocusProcessMenu
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormFocusProcessDown
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogicTask
</UL>

<P><STRONG><a name="[ab]"></a>KeySystick100Routine</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, device_key.o(i.KeySystick100Routine))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = KeySystick100Routine &rArr; PostMessage &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostMessage
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyGetStateAndValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(i.SystemDeviceInit)
</UL>
<P><STRONG><a name="[25a]"></a>KeyTone</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, tasklogic.o(i.KeyTone))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = KeyTone &rArr; WT5880DSetVol &rArr; SendThreeLines &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT5880DSetVol
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendThreeLines
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess
</UL>

<P><STRONG><a name="[b]"></a>KeyToneSetup</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, setupmenu.o(i.KeyToneSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KeyToneSetup
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogicTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[96]"></a>LCDClear</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, device_lcd.o(i.LCDClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCDClear &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteRAMPrepare
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetCursor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_lcd.o(i.LCDInit)
</UL>
<P><STRONG><a name="[260]"></a>LCDDrawLine</STRONG> (Thumb, 172 bytes, Stack size 72 bytes, device_lcd.o(i.LCDDrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCDDrawLine &rArr; LCDDrawPoint &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
</UL>

<P><STRONG><a name="[9b]"></a>LCDDrawPoint</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, device_lcd.o(i.LCDDrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCDDrawPoint &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteRAMPrepare
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteData
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDFillAlpha
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawLine
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawingBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_lcd.o(i.LCDInit)
</UL>
<P><STRONG><a name="[142]"></a>LCDDrawRectangle</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, device_lcd.o(i.LCDDrawRectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LCDDrawRectangle &rArr; LCDDrawLine &rArr; LCDDrawPoint &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryDisplay
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextBox
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxStaticUpdate
</UL>

<P><STRONG><a name="[266]"></a>LCDFillAlpha</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, device_lcd.o(i.LCDFillAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LCDFillAlpha &rArr; LCDReadPointRGB &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDReadPointRGB
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawPoint
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;piclib_alpha_blend
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIcon
</UL>

<P><STRONG><a name="[269]"></a>LCDInit</STRONG> (Thumb, 716 bytes, Stack size 8 bytes, device_lcd.o(i.LCDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LCDInit &rArr; LCDFSMCInit
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteData
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDReadRegister
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDReadData
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdDisplayDirection
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteRegister
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteReg
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDReset
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDGPIOInit
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDFSMCInit
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[26e]"></a>LCDReadData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, device_lcd.o(i.LCDReadData))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDReadRegister
</UL>

<P><STRONG><a name="[9a]"></a>LCDReadPointRGB</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, device_lcd.o(i.LCDReadPointRGB))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCDReadPointRGB &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetCursor
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDFillAlpha
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawingBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_lcd.o(i.LCDInit)
</UL>
<P><STRONG><a name="[26c]"></a>LCDReadRegister</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, device_lcd.o(i.LCDReadRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCDReadRegister &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDReadData
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
</UL>

<P><STRONG><a name="[22d]"></a>LCDSetCursor</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, device_lcd.o(i.LCDSetCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteData
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDReadPointRGB
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawPoint
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillArea
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClear
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageDraw
</UL>

<P><STRONG><a name="[261]"></a>LCDWriteData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, device_lcd.o(i.LCDWriteData))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawPoint
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSetWindow
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetCursor
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdScanDirection
</UL>

<P><STRONG><a name="[22f]"></a>LCDWriteRAMPrepare</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, device_lcd.o(i.LCDWriteRAMPrepare))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawPoint
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillArea
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDClear
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageLocalDraw
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageDraw
</UL>

<P><STRONG><a name="[283]"></a>LCD_AA_MixColors</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcd_aa.o(i.LCD_AA_MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_AA_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
</UL>

<P><STRONG><a name="[27c]"></a>LCD_Color2Index</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Color2Index))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
</UL>

<P><STRONG><a name="[1a3]"></a>LCD_DrawBitmap</STRONG> (Thumb, 508 bytes, Stack size 88 bytes, lcd.o(i.LCD_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[d8]"></a>LCD_DrawHLine</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lcd.o(i.LCD_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.constdata)
</UL>
<P><STRONG><a name="[d9]"></a>LCD_DrawPixel</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.constdata)
</UL>
<P><STRONG><a name="[1da]"></a>LCD_DrawVLine</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>

<P><STRONG><a name="[1a9]"></a>LCD_FillRect</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lcd.o(i.LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
</UL>

<P><STRONG><a name="[270]"></a>LCD_GetBitsPerPixelEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetBitsPerPixelEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[1db]"></a>LCD_GetBkColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>

<P><STRONG><a name="[1dd]"></a>LCD_GetColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
</UL>

<P><STRONG><a name="[272]"></a>LCD_GetNumColors</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexMask_0
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[273]"></a>LCD_GetNumColorsEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColorsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColorsEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[274]"></a>LCD_GetNumLayers</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lcd_getnumdisplays.o(i.LCD_GetNumLayers))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumLayers
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[275]"></a>LCD_GetPalette</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetPalette))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPalette &rArr; LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[276]"></a>LCD_GetPaletteEx</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd_getex.o(i.LCD_GetPaletteEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
</UL>

<P><STRONG><a name="[277]"></a>LCD_GetPixelColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd_getpixelcolor.o(i.LCD_GetPixelColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
</UL>

<P><STRONG><a name="[278]"></a>LCD_GetPixelIndex</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, lcd_getp.o(i.LCD_GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>

<P><STRONG><a name="[1b5]"></a>LCD_GetVXSizeMax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVXSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetVXSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
</UL>

<P><STRONG><a name="[27a]"></a>LCD_GetpPalConvTable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_color.o(i.LCD_GetpPalConvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[16]"></a>LCD_GetpPalConvTableBM</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_color.o(i.LCD_GetpPalConvTableBM))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableBM &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.data)
</UL>
<P><STRONG><a name="[27b]"></a>LCD_GetpPalConvTableUncached</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_GetpPalConvTableUncached))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableBM
</UL>

<P><STRONG><a name="[1dc]"></a>LCD_Index2Color</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Index2Color))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>

<P><STRONG><a name="[d4]"></a>LCD_Index2Color_M565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_m565_index2color.o(i.LCD_Index2Color_M565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[27d]"></a>LCD_InitColors</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd_color.o(i.LCD_InitColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[27e]"></a>LCD_InitLUT</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_InitLUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_InitLUT &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[1ef]"></a>LCD_SelectLCD</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lcd_selectlcd.o(i.LCD_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SelectLCD
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[1f3]"></a>LCD_SetBkColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColor))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>

<P><STRONG><a name="[287]"></a>LCD_SetBkColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
</UL>

<P><STRONG><a name="[281]"></a>LCD_SetClipRectEx</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, lcd_setcliprectex.o(i.LCD_SetClipRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[280]"></a>LCD_SetClipRectMax</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetClipRectMax))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>

<P><STRONG><a name="[1f4]"></a>LCD_SetColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColor))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>

<P><STRONG><a name="[286]"></a>LCD_SetColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
</UL>

<P><STRONG><a name="[1a8]"></a>LCD_SetDrawMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetDrawMode))
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[27f]"></a>LCD_SetLUTEntryEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetLUTEntryEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[b4]"></a>LCD_SetPixelAA</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, lcd_aa.o(i.LCD_SetPixelAA))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_SetPixelAA &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_lib.o(i._FlushLine)
</UL>
<P><STRONG><a name="[284]"></a>LCD_SetSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[285]"></a>LCD_SetVSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetVSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetVSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[1f0]"></a>LCD_UpdateColorIndices</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd_updatecolorindices.o(i.LCD_UpdateColorIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[1fb]"></a>LCD_X_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lcdconf_flexcolor_template.o(i.LCD_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[288]"></a>LCD_X_DisplayDriver</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lcdconf_flexcolor_template.o(i.LCD_X_DisplayDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = LCD_X_DisplayDriver &rArr; LCDInit &rArr; LCDFSMCInit
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLUTEntry
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_On
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Off
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
</UL>

<P><STRONG><a name="[289]"></a>LCD__DrawBitmap_1bpp</STRONG> (Thumb, 424 bytes, Stack size 104 bytes, lcd.o(i.LCD__DrawBitmap_1bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[28a]"></a>LCD__GetBPP</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD__GetBPP))
<BR><BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>

<P><STRONG><a name="[1eb]"></a>LCD__GetBPPDevice</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, lcd_getex.o(i.LCD__GetBPPDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPP
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>

<P><STRONG><a name="[28b]"></a>LEDInit</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, device_led.o(i.LEDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LEDInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeviceInit
</UL>

<P><STRONG><a name="[97]"></a>LcdFillArea</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, device_lcd.o(i.LcdFillArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LcdFillArea &rArr; LcdSetWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSetWindow
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteRAMPrepare
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordFormUpdata
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIcon
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateGsmSignal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_lcd.o(i.LCDInit)
</UL>
<P><STRONG><a name="[22e]"></a>LcdSetWindow</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, device_lcd.o(i.LcdSetWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LcdSetWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteData
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillArea
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageLocalDraw
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageDraw
</UL>

<P><STRONG><a name="[2b0]"></a>LeapYear</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, device_rtc.o(i.LeapYear))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCTimeSet
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCGetTime
</UL>

<P><STRONG><a name="[81]"></a>ListSearch</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, systemgui.o(i.ListSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ListSearch
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneTypeAddr
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCancel
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoAddrGet
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFormData
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcesscheckBox
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormProcessEnter
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxListSaveProcess
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseListbox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> systemgui.o(i.InitGui)
</UL>
<P><STRONG><a name="[291]"></a>LoadDefaultPara</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, securintymenu.o(i.LoadDefaultPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = LoadDefaultPara &rArr; ZoneDefaults &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogDefaults
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoArmDisarmDefaults
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZoneDefaults
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInitParameter
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteDefaults
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAllInit
</UL>

<P><STRONG><a name="[a]"></a>LogAddrGet</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, logprocess.o(i.LogAddrGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LogAddrGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[172]"></a>LogDefaults</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, securintymenu.o(i.LogDefaults))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LogDefaults &rArr; FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultPara
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultRest
</UL>

<P><STRONG><a name="[290]"></a>LogListUpdate</STRONG> (Thumb, 3502 bytes, Stack size 88 bytes, systemgui.o(i.LogListUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = LogListUpdate &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageDrawAlpah
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxStaticUpdate
</UL>

<P><STRONG><a name="[133]"></a>LogMenuInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, logprocess.o(i.LogMenuInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LogMenuInit &rArr; LogListInit
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogRecordListInit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllMenuListInit
</UL>

<P><STRONG><a name="[293]"></a>LogRecordListInit</STRONG> (Thumb, 320 bytes, Stack size 24 bytes, logprocess.o(i.LogRecordListInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LogRecordListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMenuInit
</UL>

<P><STRONG><a name="[128]"></a>LogWrite</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, logprocess.o(i.LogWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LogWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteAlawyAndStayProcess
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfProcess
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoArmOrDisarmProcess
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayArmProcess
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayAlarmProcess
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteProcess
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmProcess
</UL>

<P><STRONG><a name="[c5]"></a>LogicTask</STRONG> (Thumb, 242 bytes, Stack size 8 bytes, tasklogic.o(i.LogicTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = LogicTask &rArr; DtmfProcess &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessProcess
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageProcess
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuListInit
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyToneSetup
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfProcess
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallRingProcess
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallProcess
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CIDProProcess
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmStateProcess
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChipInfo
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateUpdateProcess
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoArmOrDisarmProcess
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.main)
</UL>
<P><STRONG><a name="[299]"></a>LogoDisplay</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, boot.o(i.LogoDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LogoDisplay &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGUIInit
</UL>

<P><STRONG><a name="[1e]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29d]"></a>MenuInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, taskmenu.o(i.MenuInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = MenuInit &rArr; AllMenuListInit &rArr; SettingTab &rArr; SetupSMSFunc
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IconMenuInit
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllMenuListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuTask
</UL>

<P><STRONG><a name="[295]"></a>MenuListInit</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, menulist.o(i.MenuListInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MenuListInit &rArr; MenuZone &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuZone
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuVoice
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuSetup
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuSecurity
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuPhone
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuLog
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuCall
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuAbout
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogicTask
</UL>

<P><STRONG><a name="[c6]"></a>MenuTask</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, taskmenu.o(i.MenuTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = MenuTask &rArr; MenuInit &rArr; AllMenuListInit &rArr; SettingTab &rArr; SetupSMSFunc
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.main)
</UL>
<P><STRONG><a name="[2a2]"></a>MenuZone</STRONG> (Thumb, 538 bytes, Stack size 8 bytes, menulist.o(i.MenuZone))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MenuZone &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuListInit
</UL>

<P><STRONG><a name="[297]"></a>MessageProcess</STRONG> (Thumb, 178 bytes, Stack size 312 bytes, eventprocess.o(i.MessageProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = MessageProcess &rArr; GetPhoneTypeTotal &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneTypeTotal
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnglishConvert
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNumber
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogicTask
</UL>

<P><STRONG><a name="[1c]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[215]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUsart
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTime3
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmDMASendConfig
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTime6
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPIRxDMA
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCNVICConfig
</UL>

<P><STRONG><a name="[214]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAllInit
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmDMASendConfig
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPIRxDMA
</UL>

<P><STRONG><a name="[b0]"></a>OpenRF</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, taskmenu.o(i.OpenRF))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OpenRF
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Address Reference Count : 2]<UL><LI> taskmenu.o(i.WirelessOpen)
<LI> device_wireless.o(i.WirelessDecodeInterrupt)
</UL>
<P><STRONG><a name="[a1]"></a>OpenRx</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, taskmenu.o(i.OpenRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OpenRx &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskmenu.o(i.MenuTask)
</UL>
<P><STRONG><a name="[240]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_pwr.o(i.PWR_BackupAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAllInit
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCTimeSet
</UL>

<P><STRONG><a name="[95]"></a>PanelAlarm</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, tasklogic.o(i.PanelAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = PanelAlarm &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneTypeTotal
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasklogic.o(i.KeyProcess)
</UL>
<P><STRONG><a name="[2ac]"></a>ParseTime</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, systemgui.o(i.ParseTime))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse
</UL>

<P><STRONG><a name="[e]"></a>PhoneTypeAddr</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, phonemenu.o(i.PhoneTypeAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PhoneTypeAddr &rArr; ListSearch
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListSearch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[25e]"></a>PlayStart</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, tasklogic.o(i.PlayStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PlayStart
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess
</UL>

<P><STRONG><a name="[13a]"></a>PostMessage</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, system.o(i.PostMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = PostMessage &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoArmOrDisarm
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CidMessageSystick100Routine
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallMessageSystick100Routine
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessageSystick100Routine
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerSystick1000Routine
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sim800SystickRoutine
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMFSystick1000Routine
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallRingSystick1000Routine
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeySystick100Routine
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmRxdTime
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessDecode
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[235]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_ADCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
</UL>

<P><STRONG><a name="[210]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGUIInit
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmDMASendConfig
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDFSMCInit
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPITxDMA
</UL>

<P><STRONG><a name="[23f]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlashInit
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUsart
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAllInit
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTime3
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTime6
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCTimeSet
</UL>

<P><STRONG><a name="[32a]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[16e]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICInit
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessPortInit
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePortInit
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlashInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDInit
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUsart
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DcDetInit
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmGPIOInit
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDGPIOInit
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[11a]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[140]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_BackupResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_DeInit
</UL>

<P><STRONG><a name="[32b]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[242]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
</UL>

<P><STRONG><a name="[241]"></a>RCC_LSEConfig</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_LSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
</UL>

<P><STRONG><a name="[244]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_RTCCLKCmd))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
</UL>

<P><STRONG><a name="[243]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_RTCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
</UL>

<P><STRONG><a name="[8c]"></a>RTCGetTime</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, device_rtc.o(i.RTCGetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTCGetTime &rArr; RTCGetWeek
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeapYear
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCGetWeek
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_rtc.o(i.InitRTC)
</UL>
<P><STRONG><a name="[8b]"></a>RTCTimeSet</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, device_rtc.o(i.RTCTimeSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RTCTimeSet &rArr; RTC_SetCounter
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForLastTask
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCounter
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeapYear
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
</UL>
<BR>[Address Reference Count : 2]<UL><LI> device_rtc.o(i.InitRTC)
<LI> device_rtc.o(i.RTCTimeSet)
</UL>
<P><STRONG><a name="[2b4]"></a>RTC_ClearITPendingBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[248]"></a>RTC_EnterConfigMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_EnterConfigMode))
<BR><BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCounter
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
</UL>

<P><STRONG><a name="[24a]"></a>RTC_ExitConfigMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_ExitConfigMode))
<BR><BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCounter
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
</UL>

<P><STRONG><a name="[2af]"></a>RTC_GetCounter</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_GetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCGetTime
</UL>

<P><STRONG><a name="[2b3]"></a>RTC_GetITStatus</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[28]"></a>RTC_IRQHandler</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, device_rtc.o(i.RTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = RTC_IRQHandler &rArr; AutoArmOrDisarm &rArr; PostMessage &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForLastTask
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetITStatus
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearITPendingBit
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostMessage
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoArmOrDisarm
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCGetTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[247]"></a>RTC_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
</UL>

<P><STRONG><a name="[2b2]"></a>RTC_SetCounter</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, stm32f10x_rtc.o(i.RTC_SetCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_SetCounter
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCTimeSet
</UL>

<P><STRONG><a name="[249]"></a>RTC_SetPrescaler</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, stm32f10x_rtc.o(i.RTC_SetPrescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_SetPrescaler
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
</UL>

<P><STRONG><a name="[245]"></a>RTC_WaitForLastTask</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_WaitForLastTask))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCTimeSet
</UL>

<P><STRONG><a name="[246]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_WaitForSynchro))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
</UL>

<P><STRONG><a name="[333]"></a>RecTimeUpdate</STRONG> (Thumb, 276 bytes, Stack size 8 bytes, taskmenu.o(i.RecTimeUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RecTimeUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update
</UL>

<P><STRONG><a name="[2b6]"></a>RecordFormUpdata</STRONG> (Thumb, 330 bytes, Stack size 16 bytes, systemgui.o(i.RecordFormUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = RecordFormUpdata &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillArea
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageDrawAlpah
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserUpdate
</UL>

<P><STRONG><a name="[25d]"></a>RecordStart</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, tasklogic.o(i.RecordStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RecordStart
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess
</UL>

<P><STRONG><a name="[13d]"></a>RemoteAlawyAndStayProcess</STRONG> (Thumb, 572 bytes, Stack size 48 bytes, wirelessprocess.o(i.RemoteAlawyAndStayProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = RemoteAlawyAndStayProcess &rArr; LogWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendThreeLines
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogWrite
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDoorState
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoArmOrDisarmProcess
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteProcess
</UL>

<P><STRONG><a name="[12f]"></a>RemoteInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, zonemenu.o(i.RemoteInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RemoteInit &rArr; SensorsListInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorsListInit
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteList
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZoneSetList
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZoneConfigInit
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZoneAttributeInit
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessSirenList
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SirenFomInit
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteSoundInit
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteDelFomInit
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteConfig
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteCodeFormInit
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadyArmList
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetectorDelFomInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllMenuListInit
</UL>

<P><STRONG><a name="[2bb]"></a>RemoteList</STRONG> (Thumb, 336 bytes, Stack size 32 bytes, zonemenu.o(i.RemoteList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RemoteList
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteInit
</UL>

<P><STRONG><a name="[8]"></a>RemoteTypeAddr</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, zonemenu.o(i.RemoteTypeAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RemoteTypeAddr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[357]"></a>RemoteValueCheck</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, wirelessprocess.o(i.RemoteValueCheck))
<BR><BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessProcess
</UL>

<P><STRONG><a name="[c]"></a>RingTimesSetup</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, setupmenu.o(i.RingTimesSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RingTimesSetup &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[2cc]"></a>SEGGER_RTT_Write</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, segger_rtt.o(i.SEGGER_RTT_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
</UL>

<P><STRONG><a name="[2ce]"></a>SEGGER_RTT_WriteNoLock</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, segger_rtt.o(i.SEGGER_RTT_WriteNoLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAvailWriteSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[151]"></a>SEGGER_RTT_printf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, segger_rtt_printf.o(i.SEGGER_RTT_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostMessage
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfProcess
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelAlarm
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmStateProcess
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CidMessageSystick100Routine
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallMessageSystick100Routine
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallAlarming
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessageSystick100Routine
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultRest
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmInit
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmRxdTime
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessDecodeInterrupt
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessDecode
</UL>

<P><STRONG><a name="[2d2]"></a>SEGGER_RTT_vprintf</STRONG> (Thumb, 522 bytes, Stack size 136 bytes, segger_rtt_printf.o(i.SEGGER_RTT_vprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>

<P><STRONG><a name="[21e]"></a>SMSCountProcess</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, eventprocess.o(i.SMSCountProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SMSCountProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmStateProcess
</UL>

<P><STRONG><a name="[a3]"></a>SMSSendDelay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wirelessprocess.o(i.SMSSendDelay))
<BR>[Address Reference Count : 1]<UL><LI> wirelessprocess.o(i.RemoteAlawyAndStayProcess)
</UL>
<P><STRONG><a name="[2d7]"></a>SPI2CmdSend</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, spi.o(i.SPI2CmdSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI2CmdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetCurrDataCounter
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DMACmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadID
</UL>

<P><STRONG><a name="[2d8]"></a>SPI2_Init</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, spi.o(i.SPI2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SPI2_Init &rArr; InitSPIRxDMA &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPITxDMA
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPIRxDMA
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
</UL>

<P><STRONG><a name="[2db]"></a>SPI2_ReadWriteByte</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, spi.o(i.SPI2_ReadWriteByte))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadSR
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadID
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Erase_Sector
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Write_Enable
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[2dc]"></a>SPI2_SetSpeed</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, spi.o(i.SPI2_SetSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI2_SetSpeed
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
</UL>

<P><STRONG><a name="[2dd]"></a>SPIFlashInit</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, device_spiflash.o(i.SPIFlashInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPIFlashInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WAKEUP
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAllInit
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeviceInit
</UL>

<P><STRONG><a name="[2de]"></a>SPIFlash_WAKEUP</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, device_spiflash.o(i.SPIFlash_WAKEUP))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPIFlash_WAKEUP &rArr; SPI_FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlashInit
</UL>

<P><STRONG><a name="[2da]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlashInit
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_SetSpeed
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[262]"></a>SPI_FLASH_BufferRead</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, device_spiflash.o(i.SPI_FLASH_BufferRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawingBitmap
</UL>

<P><STRONG><a name="[2e0]"></a>SPI_FLASH_SendByte</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, device_spiflash.o(i.SPI_FLASH_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_FLASH_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WAKEUP
</UL>

<P><STRONG><a name="[2e4]"></a>SPI_FLASH_Write_Enable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, flash.o(i.SPI_FLASH_Write_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_FLASH_Write_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Erase_Sector
</UL>

<P><STRONG><a name="[2e5]"></a>SPI_Flash_Erase_Sector</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, flash.o(i.SPI_Flash_Erase_Sector))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_Flash_Erase_Sector &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Write_Enable
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write
</UL>

<P><STRONG><a name="[2e7]"></a>SPI_Flash_Init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, flash.o(i.SPI_Flash_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SPI_Flash_Init &rArr; SPI2_Init &rArr; InitSPIRxDMA &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadID
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_SetSpeed
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[2e9]"></a>SPI_Flash_Read</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, flash.o(i.SPI_Flash_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_Flash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[2e8]"></a>SPI_Flash_ReadID</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, flash.o(i.SPI_Flash_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_Flash_ReadID &rArr; SPI2CmdSend
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2CmdSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
</UL>

<P><STRONG><a name="[2ea]"></a>SPI_Flash_ReadSR</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, flash.o(i.SPI_Flash_ReadSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
</UL>

<P><STRONG><a name="[2e6]"></a>SPI_Flash_Wait_Busy</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash.o(i.SPI_Flash_Wait_Busy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_ReadSR
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Erase_Sector
</UL>

<P><STRONG><a name="[2eb]"></a>SPI_Flash_Write</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, flash.o(i.SPI_Flash_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_NoCheck
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Erase_Sector
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[2ec]"></a>SPI_Flash_Write_NoCheck</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, flash.o(i.SPI_Flash_Write_NoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_Page
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write
</UL>

<P><STRONG><a name="[2ed]"></a>SPI_Flash_Write_Page</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, flash.o(i.SPI_Flash_Write_Page))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Wait_Busy
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Write_Enable
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write_NoCheck
</UL>

<P><STRONG><a name="[24e]"></a>SPI_I2S_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2CmdSend
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPIRxDMA
</UL>

<P><STRONG><a name="[2e1]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>

<P><STRONG><a name="[2e3]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>

<P><STRONG><a name="[2e2]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>

<P><STRONG><a name="[2d9]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlashInit
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Init
</UL>

<P><STRONG><a name="[21]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[312]"></a>ScreenPointerInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, screensavertime.o(i.ScreenPointerInit))
<BR><BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeviceInit
</UL>

<P><STRONG><a name="[132]"></a>SecurintyInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, securintymenu.o(i.SecurintyInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SecurintyInit &rArr; SureFomInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatitInit
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SureFomInit
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecurityListInit
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordFormInit
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactoryDefaults
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllMenuListInit
</UL>

<P><STRONG><a name="[2f3]"></a>SendMessageSystick100Routine</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, wirelessprocess.o(i.SendMessageSystick100Routine))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = SendMessageSystick100Routine &rArr; PostMessage &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[189]"></a>SendThreeLines</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, device_voice.o(i.SendThreeLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SendThreeLines &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT5880DSetVol
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockProcess
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteAlawyAndStayProcess
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfProcess
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyTone
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteAlarmProcess
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeviceInit
</UL>

<P><STRONG><a name="[68]"></a>SendWirelessData</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, device_wireless.o(i.SendWirelessData))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SendWirelessData &rArr; WirelessSendPacket &rArr; WirelessSendBit &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessSendPacket
</UL>
<BR>[Address Reference Count : 5]<UL><LI> wirelessprocess.o(i.DelayArmProcess)
<LI> tasklogic.o(i.KeyProcess)
<LI> wirelessprocess.o(i.RemoteAlarmProcess)
<LI> wirelessprocess.o(i.RemoteAlawyAndStayProcess)
<LI> wirelessprocess.o(i.UnlockProcess)
</UL>
<P><STRONG><a name="[2ba]"></a>SensorsListInit</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, zonemenu.o(i.SensorsListInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SensorsListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteInit
</UL>

<P><STRONG><a name="[131]"></a>SettingTab</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, setupmenu.o(i.SettingTab))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SettingTab &rArr; SetupSMSFunc
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemStatesInfo
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactIDMenuInit
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupVolumeFunc
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupSirenTimeFunc
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupSMSFunc
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupRingTimeFunc
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupLanguageFunc
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupKeyToneFunc
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupDateFunc
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupAutoFunc
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingMenuList
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPanelPowerOFF
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreensaverForm
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delayfunc
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoArmDisarmInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllMenuListInit
</UL>

<P><STRONG><a name="[305]"></a>Sim800SystickRoutine</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, device_gsm.o(i.Sim800SystickRoutine))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = Sim800SystickRoutine &rArr; PostMessage &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[219]"></a>Simcom800CInit</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, device_gsm.o(i.Simcom800CInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Simcom800CInit &rArr; GsmATSend &rArr; StrinPrintf &rArr; __c89vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmATSend
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmStateProcess
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmInit
</UL>

<P><STRONG><a name="[21d]"></a>SingParse</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, eventprocess.o(i.SingParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SingParse
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmStateProcess
</UL>

<P><STRONG><a name="[129]"></a>SirenAlarm</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wirelessprocess.o(i.SirenAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SirenAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayAlarmProcess
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteAlarmProcess
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmProcess
</UL>

<P><STRONG><a name="[4]"></a>SirenStateSave</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, zonemenu.o(i.SirenStateSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SirenStateSave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>SirneState</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, zonemenu.o(i.SirneState))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SirneState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[307]"></a>StandbyStateGet</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, taskmenu.o(i.StandbyStateGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = StandbyStateGet &rArr; StandbyMenu
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StandbyMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessOpen
</UL>

<P><STRONG><a name="[2c8]"></a>StorageAddr</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, wirelessprocess.o(i.StorageAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = StorageAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteProcess
</UL>

<P><STRONG><a name="[181]"></a>StorageNameAddr</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, wirelessprocess.o(i.StorageNameAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = StorageNameAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteProcess
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetectorProcess
</UL>

<P><STRONG><a name="[6d]"></a>StrinPrintf</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, device_gsm.o(i.StrinPrintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = StrinPrintf &rArr; __c89vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmDMAEnable
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmCall
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmATSend
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmSendSMS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_gsm.o(i.GsmInit)
</UL>
<P><STRONG><a name="[24]"></a>SysTick_Handler</STRONG> (Thumb, 178 bytes, Stack size 8 bytes, device_systick.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = SysTick_Handler &rArr; TimerSystick1000Routine &rArr; PostMessage &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CidMessageSystick100Routine
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallMessageSystick100Routine
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessageSystick100Routine
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartSystick1000Routine
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerSystick1000Routine
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sim800SystickRoutine
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMFSystick1000Routine
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallRingSystick1000Routine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[233]"></a>SystemAllInit</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, bsp.o(i.SystemAllInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = SystemAllInit &rArr; LoadDefaultPara &rArr; ZoneDefaults &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_WriteBackupRegister
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_ReadBackupRegister
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultPara
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlashInit
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGUIInit
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeviceInit
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init
</UL>

<P><STRONG><a name="[62]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[173]"></a>SystemReset</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, securintymenu.o(i.SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultRest
</UL>

<P><STRONG><a name="[94]"></a>SystemSet</STRONG> (Thumb, 394 bytes, Stack size 40 bytes, systemset.o(i.SystemSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = SystemSet &rArr; SystemContacts &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZoneSet
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessSirenSetm
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VolumeSet
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadSecurityCenter
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeToString
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemState
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRTCUpdate
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeletPhone
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemContacts
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SirenTimeSet
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSReply
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingTimesSet
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteSet
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordInfo
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IllegalArm
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllRemote
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelaySet
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmOrDisarmReport
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> systemset.o(i.InitsystemApp)
</UL>
<P><STRONG><a name="[304]"></a>SystemStatesInfo</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, setupmenu.o(i.SystemStatesInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemStatesInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTab
</UL>

<P><STRONG><a name="[42]"></a>TIM3_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, device_gsm.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = TIM3_IRQHandler &rArr; GsmRxdTime &rArr; PostMessage &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmRxdTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM4_IRQHandler</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, device_call.o(i.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM4_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>TIM5_IRQHandler</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, device_frequency.o(i.TIM5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM5_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture1
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>TIM7_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, device_wireless.o(i.TIM7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = TIM7_IRQHandler &rArr; WirelessDecodeInterrupt &rArr; WirelessDecode &rArr; PostMessage &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessDecodeInterrupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[323]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[13e]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockProcess
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallRingProcess
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormFocusProcessMenu
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenRF
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoHangUpTime
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CodeWirelessOpen
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallRingSystick1000Routine
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTime3
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessDecodeInterrupt
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTime6
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[324]"></a>TIM_GetCapture1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_GetCapture1))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[322]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[251]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTime3
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTime6
</UL>

<P><STRONG><a name="[250]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTime3
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTime6
</UL>

<P><STRONG><a name="[327]"></a>TimeDisplay</STRONG> (Thumb, 776 bytes, Stack size 16 bytes, systemgui.o(i.TimeDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = TimeDisplay &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageLocalDraw
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageDrawAlpah
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update
</UL>

<P><STRONG><a name="[30b]"></a>TimerSystick1000Routine</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, device_timer.o(i.TimerSystick1000Routine))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = TimerSystick1000Routine &rArr; PostMessage &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[318]"></a>TouchKeyInit</STRONG> (Thumb, 576 bytes, Stack size 8 bytes, device_key.o(i.TouchKeyInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TouchKeyInit &rArr; IICInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICWaitAck
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICStop
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICStart
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICSendByte
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICInit
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeviceInit
</UL>

<P><STRONG><a name="[4b]"></a>USART2_IRQHandler</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, device_gsm.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART2_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[15f]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUsart
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenUsart2
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseUsart2
</UL>

<P><STRONG><a name="[309]"></a>USART_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrinPrintf
</UL>

<P><STRONG><a name="[254]"></a>USART_DeInit</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32f10x_usart.o(i.USART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUsart
</UL>

<P><STRONG><a name="[329]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[15e]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUsart
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenUsart2
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseUsart2
</UL>

<P><STRONG><a name="[255]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUsart
</UL>

<P><STRONG><a name="[13c]"></a>UnlockProcess</STRONG> (Thumb, 370 bytes, Stack size 72 bytes, wirelessprocess.o(i.UnlockProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = UnlockProcess &rArr; SendThreeLines &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendThreeLines
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoArmOrDisarmProcess
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteProcess
</UL>

<P><STRONG><a name="[332]"></a>UpdateAutoDigit</STRONG> (Thumb, 396 bytes, Stack size 32 bytes, systemgui.o(i.UpdateAutoDigit))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = UpdateAutoDigit &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update
</UL>

<P><STRONG><a name="[20]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30a]"></a>UsartSystick1000Routine</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, device_usart.o(i.UsartSystick1000Routine))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[334]"></a>UserUpdate</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, systemgui.o(i.UserUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = UserUpdate &rArr; RecordFormUpdata &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordFormUpdata
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update
</UL>

<P><STRONG><a name="[130]"></a>VoiceInit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, recordmenu.o(i.VoiceInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = VoiceInit &rArr; RecordingMenuInit
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordingMenuInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllMenuListInit
</UL>

<P><STRONG><a name="[314]"></a>VoicePortInit</STRONG> (Thumb, 178 bytes, Stack size 8 bytes, device_voice.o(i.VoicePortInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = VoicePortInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AW8377SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeviceInit
</UL>

<P><STRONG><a name="[1f1]"></a>WM_Activate</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm.o(i.WM_Activate))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[336]"></a>WM_BringToBottom</STRONG> (Thumb, 126 bytes, Stack size 64 bytes, wm_bringtobottom.o(i.WM_BringToBottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[33a]"></a>WM_CreateWindowAsChild</STRONG> (Thumb, 318 bytes, Stack size 48 bytes, wm.o(i.WM_CreateWindowAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[33f]"></a>WM_DefaultProc</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, wm.o(i.WM_DefaultProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[374]"></a>WM_GetDesktopWindow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getdesktopwindow.o(i.WM_GetDesktopWindow))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>

<P><STRONG><a name="[342]"></a>WM_GetFirstChild</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wm_getfirstchild.o(i.WM_GetFirstChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetFirstChild
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[338]"></a>WM_GetParent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wm_getparent.o(i.WM_GetParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>

<P><STRONG><a name="[1e6]"></a>WM_Init</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, wm.o(i.WM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[344]"></a>WM_InvalidateRect</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, wm.o(i.WM_InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[33d]"></a>WM_InvalidateWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM_InvalidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[34a]"></a>WM_InvalidateWindowAndDescsEx</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, wm.o(i.WM_InvalidateWindowAndDescsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescsEx &rArr;  WM_InvalidateWindowAndDescsEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[33c]"></a>WM_SelectWindow</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, wm.o(i.WM_SelectWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WM_SelectWindow &rArr; WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[341]"></a>WM_SendToParent</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_sendtoparent.o(i.WM_SendToParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>

<P><STRONG><a name="[34e]"></a>WM__ActivateClipRect</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, wm.o(i.WM__ActivateClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[343]"></a>WM__AddCriticalHandle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_criticalhandle.o(i.WM__AddCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[346]"></a>WM__Client2Screen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm.o(i.WM__Client2Screen))
<BR><BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[348]"></a>WM__ClipAtParentBorders</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, wm.o(i.WM__ClipAtParentBorders))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__ClipAtParentBorders
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[340]"></a>WM__GetClientRectEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getclientrect.o(i.WM__GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>

<P><STRONG><a name="[352]"></a>WM__GetClientRectWin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm.o(i.WM__GetClientRectWin))
<BR><BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>

<P><STRONG><a name="[353]"></a>WM__GetFirstSibling</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm__getfirstsibling.o(i.WM__GetFirstSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>

<P><STRONG><a name="[1b2]"></a>WM__GetNextIVR</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, wm.o(i.WM__GetNextIVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[1ae]"></a>WM__GetOrgX_AA</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm__getorg_aa.o(i.WM__GetOrgX_AA))
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
</UL>

<P><STRONG><a name="[1af]"></a>WM__GetOrgY_AA</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm__getorg_aa.o(i.WM__GetOrgY_AA))
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
</UL>

<P><STRONG><a name="[337]"></a>WM__GetPrevSibling</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wm__getprevsibling.o(i.WM__GetPrevSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>

<P><STRONG><a name="[355]"></a>WM__GetTopLevelLayer</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm.o(i.WM__GetTopLevelLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__GetTopLevelLayer
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
</UL>

<P><STRONG><a name="[1b1]"></a>WM__InitIVRSearch</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, wm.o(i.WM__InitIVRSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillCircle
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[33b]"></a>WM__InsertWindowIntoList</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, wm.o(i.WM__InsertWindowIntoList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__InsertWindowIntoList
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[349]"></a>WM__Invalidate1Abs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM__Invalidate1Abs &rArr; _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[345]"></a>WM__InvalidateDrawAndDescs</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateDrawAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + In Cycle
<LI>Call Chain = WM__InvalidateDrawAndDescs &rArr;  WM__InvalidateDrawAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[356]"></a>WM__InvalidateRect</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, wm.o(i.WM__InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + In Cycle
<LI>Call Chain = WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>

<P><STRONG><a name="[339]"></a>WM__InvalidateRectEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__InvalidateRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[376]"></a>WM__RectIsNZ</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wm.o(i.WM__RectIsNZ))
<BR><BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[34c]"></a>WM__SelectTopLevelLayer</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm.o(i.WM__SelectTopLevelLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>

<P><STRONG><a name="[34d]"></a>WM__SendMessage</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, wm__sendmessage.o(i.WM__SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
</UL>

<P><STRONG><a name="[33e]"></a>WM__SendMsgNoData</STRONG> (Thumb, 14 bytes, Stack size 24 bytes, wm.o(i.WM__SendMsgNoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[25f]"></a>WT5880DSetVol</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, device_voice.o(i.WT5880DSetVol))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = WT5880DSetVol &rArr; SendThreeLines &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendThreeLines
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyTone
</UL>

<P><STRONG><a name="[d]"></a>WatiFunc</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, securintymenu.o(i.WatiFunc))
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[325]"></a>WirelessDecodeInterrupt</STRONG> (Thumb, 204 bytes, Stack size 8 bytes, device_wireless.o(i.WirelessDecodeInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = WirelessDecodeInterrupt &rArr; WirelessDecode &rArr; PostMessage &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessDecode
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
</UL>

<P><STRONG><a name="[0]"></a>WirelessOpen</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, taskmenu.o(i.WirelessOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WirelessOpen &rArr; StandbyStateGet &rArr; StandbyMenu
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StandbyStateGet
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FocusFormReturn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[313]"></a>WirelessPortInit</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, device_wireless.o(i.WirelessPortInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WirelessPortInit &rArr; InitTime6 &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTime6
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeviceInit
</UL>

<P><STRONG><a name="[296]"></a>WirelessProcess</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, wirelessprocess.o(i.WirelessProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = WirelessProcess &rArr; DetectorProcess &rArr; AlarmProcess &rArr; LogWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPhoneTypeTotal
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteValueCheck
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetectorValueCheck
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteProcess
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetectorProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogicTask
</UL>

<P><STRONG><a name="[3]"></a>ZoneAttributeProcess</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, zonemenu.o(i.ZoneAttributeProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ZoneAttributeProcess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>ZoneAttributeSave</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, zonemenu.o(i.ZoneAttributeSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ZoneAttributeSave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>ZoneWirelessClose</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, zonemenu.o(i.ZoneWirelessClose))
<BR>[Address Reference Count : 1]<UL><LI> menulist.o(.data)
</UL>
<P><STRONG><a name="[37c]"></a>__0sprintf$8</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3b8]"></a>__1sprintf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)

<P><STRONG><a name="[127]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteCancel
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingTimesSetup
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteAlawyAndStayProcess
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DtmfToneGet
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuotoDisarmArmSet
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanelAlarm
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnglishConvert
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisarmSms
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmSms
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteProcess
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteAlarmProcess
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetectorProcess
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmProcess
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DialBufferClean
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoArmDisarmDefaults
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZoneDefaults
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteDefaults
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDefault
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteRemoteCancel
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelectorDeleteCancel
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelectorDeleteAll
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CodeWirelessOpen
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZoneSet
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VolumeSet
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadSecurityCenter
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeToString
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemState
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemRTCUpdate
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDeletPhone
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemContacts
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SirenTimeSet
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSReply
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RingTimesSet
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteSet
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PasswordInfo
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllRemote
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelaySet
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmOrDisarmReport
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmSendSMS
</UL>

<P><STRONG><a name="[37e]"></a>__0vsnprintf</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3b9]"></a>__1vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[3ba]"></a>__2vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[308]"></a>__c89vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __c89vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrinPrintf
</UL>

<P><STRONG><a name="[3bb]"></a>vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[ff]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[3bc]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[3bd]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[3be]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[3bf]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[209]"></a>calcByte</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tasklogic.o(i.calcByte))
<BR><BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChipInfo
</UL>

<P><STRONG><a name="[398]"></a>clust2sect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(i.clust2sect))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[38b]"></a>disk_initialize</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, diskio.o(i.disk_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = disk_initialize &rArr; SPI_Flash_Init &rArr; SPI2_Init &rArr; InitSPIRxDMA &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[38c]"></a>disk_ioctl</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, diskio.o(i.disk_ioctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disk_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[388]"></a>disk_read</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, diskio.o(i.disk_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = disk_read &rArr; SPI_Flash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[38a]"></a>disk_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, diskio.o(i.disk_status))
<BR><BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[39b]"></a>disk_write</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, diskio.o(i.disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[319]"></a>emWinInit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, emwingui.o(i.emWinInit))
<BR><BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGUIInit
</UL>

<P><STRONG><a name="[1e4]"></a>emWin_LCD_Init</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, lcd.o(i.emWin_LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = emWin_LCD_Init &rArr; LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[14b]"></a>f_close</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ff.o(i.f_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = f_close &rArr; f_sync &rArr; sync &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpDecode
</UL>

<P><STRONG><a name="[149]"></a>f_lseek</STRONG> (Thumb, 458 bytes, Stack size 32 bytes, ff.o(i.f_lseek))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpDecode
</UL>

<P><STRONG><a name="[294]"></a>f_mount</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, ff.o(i.f_mount))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogicTask
</UL>

<P><STRONG><a name="[147]"></a>f_open</STRONG> (Thumb, 350 bytes, Stack size 80 bytes, ff.o(i.f_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = f_open &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpDecode
</UL>

<P><STRONG><a name="[148]"></a>f_read</STRONG> (Thumb, 506 bytes, Stack size 72 bytes, ff.o(i.f_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = f_read &rArr; get_fat &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpDecode
</UL>

<P><STRONG><a name="[39c]"></a>f_sync</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, ff.o(i.f_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = f_sync &rArr; sync &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[146]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZoneSet
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemContacts
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteSet
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpDecode
</UL>

<P><STRONG><a name="[38e]"></a>get_fat</STRONG> (Thumb, 300 bytes, Stack size 32 bytes, ff.o(i.get_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = get_fat &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[39f]"></a>get_fattime</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, diskio.o(i.get_fattime))
<BR><BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[61]"></a>main</STRONG> (Thumb, 358 bytes, Stack size 8 bytes, app.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = main &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[124]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogicTask
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuListInit
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuZone
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuVoice
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuSetup
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuSecurity
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuPhone
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuLog
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuCall
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuAbout
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZoneSet
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemContacts
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteSet
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllRemote
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpDecode
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddList
</UL>

<P><STRONG><a name="[14a]"></a>pic</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bmp.o(i.pic))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pic
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpDecode
</UL>

<P><STRONG><a name="[267]"></a>piclib_alpha_blend</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, device_lcd.o(i.piclib_alpha_blend))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = piclib_alpha_blend
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDFillAlpha
</UL>

<P><STRONG><a name="[38f]"></a>put_fat</STRONG> (Thumb, 384 bytes, Stack size 40 bytes, ff.o(i.put_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = put_fat &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2f4]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[2f5]"></a>SetSysClockTo72</STRONG> (Thumb, 214 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[12c]"></a>AlarmFormInit</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, taskmenu.o(i.AlarmFormInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AlarmFormInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllMenuListInit
</UL>

<P><STRONG><a name="[12b]"></a>StandbyMenu</STRONG> (Thumb, 378 bytes, Stack size 8 bytes, taskmenu.o(i.StandbyMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = StandbyMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StandbyStateGet
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllMenuListInit
</UL>

<P><STRONG><a name="[15a]"></a>CheckBoxListSaveProcess</STRONG> (Thumb, 354 bytes, Stack size 16 bytes, tasklogic.o(i.CheckBoxListSaveProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CheckBoxListSaveProcess &rArr; ListSearch
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListSearch
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LongSaveProcess
</UL>

<P><STRONG><a name="[16c]"></a>DateTimeSet</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, tasklogic.o(i.DateTimeSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DateTimeSet
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextBoxSaveProcess
</UL>

<P><STRONG><a name="[17b]"></a>DeleteKey</STRONG> (Thumb, 356 bytes, Stack size 16 bytes, tasklogic.o(i.DeleteKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DeleteKey
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormFocusProcessMenu
</UL>

<P><STRONG><a name="[197]"></a>FormFocusProcessDown</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, tasklogic.o(i.FormFocusProcessDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FormFocusProcessDown
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxDown
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess
</UL>

<P><STRONG><a name="[199]"></a>FormFocusProcessMenu</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, tasklogic.o(i.FormFocusProcessMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FormFocusProcessMenu &rArr; AuotoDisarmArmSet &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactIDSeting
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AuotoDisarmArmSet
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcesscheckBox
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteKey
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess
</UL>

<P><STRONG><a name="[25c]"></a>FormFocusProcessReturn</STRONG> (Thumb, 644 bytes, Stack size 24 bytes, tasklogic.o(i.FormFocusProcessReturn))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FormFocusProcessReturn
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess
</UL>

<P><STRONG><a name="[19c]"></a>FormFocusProcessUP</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, tasklogic.o(i.FormFocusProcessUP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FormFocusProcessUP
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListItemsUP
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess
</UL>

<P><STRONG><a name="[19e]"></a>FormProcessEnter</STRONG> (Thumb, 658 bytes, Stack size 48 bytes, tasklogic.o(i.FormProcessEnter))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = FormProcessEnter &rArr; LongSaveProcess &rArr; TextBoxSaveProcess &rArr; DateTimeSet
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListSearch
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFormData
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LongSaveProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyProcess
</UL>

<P><STRONG><a name="[198]"></a>ListBoxDown</STRONG> (Thumb, 424 bytes, Stack size 0 bytes, tasklogic.o(i.ListBoxDown))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormFocusProcessDown
</UL>

<P><STRONG><a name="[19d]"></a>ListItemsUP</STRONG> (Thumb, 500 bytes, Stack size 0 bytes, tasklogic.o(i.ListItemsUP))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormFocusProcessUP
</UL>

<P><STRONG><a name="[19f]"></a>LongSaveProcess</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, tasklogic.o(i.LongSaveProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LongSaveProcess &rArr; TextBoxSaveProcess &rArr; DateTimeSet
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextBoxSaveProcess
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxListSaveProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormProcessEnter
</UL>

<P><STRONG><a name="[19a]"></a>ProcesscheckBox</STRONG> (Thumb, 626 bytes, Stack size 16 bytes, tasklogic.o(i.ProcesscheckBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ProcesscheckBox &rArr; ListSearch
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListSearch
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormFocusProcessMenu
</UL>

<P><STRONG><a name="[1a0]"></a>ReadFormData</STRONG> (Thumb, 298 bytes, Stack size 16 bytes, tasklogic.o(i.ReadFormData))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadFormData &rArr; ContactIDReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListSearch
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactIDReadData
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormProcessEnter
</UL>

<P><STRONG><a name="[29a]"></a>TextBoxSaveProcess</STRONG> (Thumb, 460 bytes, Stack size 24 bytes, tasklogic.o(i.TextBoxSaveProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TextBoxSaveProcess &rArr; DateTimeSet
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactIDSaveData
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateTimeSet
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LongSaveProcess
</UL>

<P><STRONG><a name="[303]"></a>AutoArmDisarmInit</STRONG> (Thumb, 1340 bytes, Stack size 8 bytes, setupmenu.o(i.AutoArmDisarmInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AutoArmDisarmInit
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTab
</UL>

<P><STRONG><a name="[2f7]"></a>Delayfunc</STRONG> (Thumb, 834 bytes, Stack size 8 bytes, setupmenu.o(i.Delayfunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delayfunc
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTab
</UL>

<P><STRONG><a name="[300]"></a>ScreensaverForm</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, setupmenu.o(i.ScreensaverForm))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ScreensaverForm
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTab
</UL>

<P><STRONG><a name="[302]"></a>SetPanelPowerOFF</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, setupmenu.o(i.SetPanelPowerOFF))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetPanelPowerOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTab
</UL>

<P><STRONG><a name="[2f6]"></a>SettingMenuList</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, setupmenu.o(i.SettingMenuList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SettingMenuList
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTab
</UL>

<P><STRONG><a name="[2f8]"></a>SetupAutoFunc</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, setupmenu.o(i.SetupAutoFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetupAutoFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTab
</UL>

<P><STRONG><a name="[2f9]"></a>SetupDateFunc</STRONG> (Thumb, 1412 bytes, Stack size 8 bytes, setupmenu.o(i.SetupDateFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetupDateFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTab
</UL>

<P><STRONG><a name="[2fb]"></a>SetupKeyToneFunc</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, setupmenu.o(i.SetupKeyToneFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetupKeyToneFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTab
</UL>

<P><STRONG><a name="[2fc]"></a>SetupLanguageFunc</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, setupmenu.o(i.SetupLanguageFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetupLanguageFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTab
</UL>

<P><STRONG><a name="[2ff]"></a>SetupRingTimeFunc</STRONG> (Thumb, 448 bytes, Stack size 8 bytes, setupmenu.o(i.SetupRingTimeFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetupRingTimeFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTab
</UL>

<P><STRONG><a name="[2fd]"></a>SetupSMSFunc</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, setupmenu.o(i.SetupSMSFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetupSMSFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTab
</UL>

<P><STRONG><a name="[2fe]"></a>SetupSirenTimeFunc</STRONG> (Thumb, 454 bytes, Stack size 8 bytes, setupmenu.o(i.SetupSirenTimeFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetupSirenTimeFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTab
</UL>

<P><STRONG><a name="[2fa]"></a>SetupVolumeFunc</STRONG> (Thumb, 914 bytes, Stack size 8 bytes, setupmenu.o(i.SetupVolumeFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetupVolumeFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingTab
</UL>

<P><STRONG><a name="[163]"></a>AddContacts</STRONG> (Thumb, 346 bytes, Stack size 8 bytes, phonemenu.o(i.AddContacts))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AddContacts
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactsTab
</UL>

<P><STRONG><a name="[165]"></a>ContactsDelFomInit</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, phonemenu.o(i.ContactsDelFomInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ContactsDelFomInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactsTab
</UL>

<P><STRONG><a name="[162]"></a>ContactsEdit</STRONG> (Thumb, 334 bytes, Stack size 32 bytes, phonemenu.o(i.ContactsEdit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ContactsEdit
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactsTab
</UL>

<P><STRONG><a name="[161]"></a>ContactsListInit</STRONG> (Thumb, 334 bytes, Stack size 24 bytes, phonemenu.o(i.ContactsListInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ContactsListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactsTab
</UL>

<P><STRONG><a name="[164]"></a>ContactsSetupList</STRONG> (Thumb, 334 bytes, Stack size 24 bytes, phonemenu.o(i.ContactsSetupList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ContactsSetupList
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContactsTab
</UL>

<P><STRONG><a name="[179]"></a>DeleteZonedetector</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, zonemenu.o(i.DeleteZonedetector))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DeleteZonedetector
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelectorDeleteCancel
</UL>

<P><STRONG><a name="[2c4]"></a>DetectorDelFomInit</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, zonemenu.o(i.DetectorDelFomInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DetectorDelFomInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteInit
</UL>

<P><STRONG><a name="[2c6]"></a>ReadyArmList</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, zonemenu.o(i.ReadyArmList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadyArmList
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteInit
</UL>

<P><STRONG><a name="[2bd]"></a>RemoteCodeFormInit</STRONG> (Thumb, 680 bytes, Stack size 8 bytes, zonemenu.o(i.RemoteCodeFormInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RemoteCodeFormInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteInit
</UL>

<P><STRONG><a name="[2bc]"></a>RemoteConfig</STRONG> (Thumb, 334 bytes, Stack size 32 bytes, zonemenu.o(i.RemoteConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RemoteConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteInit
</UL>

<P><STRONG><a name="[2bf]"></a>RemoteDelFomInit</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, zonemenu.o(i.RemoteDelFomInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RemoteDelFomInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteInit
</UL>

<P><STRONG><a name="[2be]"></a>RemoteSoundInit</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, zonemenu.o(i.RemoteSoundInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RemoteSoundInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteInit
</UL>

<P><STRONG><a name="[2c3]"></a>SirenFomInit</STRONG> (Thumb, 328 bytes, Stack size 32 bytes, zonemenu.o(i.SirenFomInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SirenFomInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteInit
</UL>

<P><STRONG><a name="[2c5]"></a>WirelessSirenList</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, zonemenu.o(i.WirelessSirenList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WirelessSirenList
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteInit
</UL>

<P><STRONG><a name="[2c2]"></a>ZoneAttributeInit</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, zonemenu.o(i.ZoneAttributeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ZoneAttributeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteInit
</UL>

<P><STRONG><a name="[2c1]"></a>ZoneConfigInit</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, zonemenu.o(i.ZoneConfigInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ZoneConfigInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteInit
</UL>

<P><STRONG><a name="[2c0]"></a>ZoneSetList</STRONG> (Thumb, 334 bytes, Stack size 32 bytes, zonemenu.o(i.ZoneSetList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ZoneSetList
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteInit
</UL>

<P><STRONG><a name="[335]"></a>RecordingMenuInit</STRONG> (Thumb, 344 bytes, Stack size 8 bytes, recordmenu.o(i.RecordingMenuInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RecordingMenuInit
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceInit
</UL>

<P><STRONG><a name="[2f0]"></a>FactoryDefaults</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, securintymenu.o(i.FactoryDefaults))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FactoryDefaults
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecurintyInit
</UL>

<P><STRONG><a name="[2ef]"></a>PasswordFormInit</STRONG> (Thumb, 600 bytes, Stack size 8 bytes, securintymenu.o(i.PasswordFormInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PasswordFormInit
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecurintyInit
</UL>

<P><STRONG><a name="[a6]"></a>PhoneDefault</STRONG> (Thumb, 144 bytes, Stack size 64 bytes, securintymenu.o(i.PhoneDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = PhoneDefault &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultPara
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultRest
</UL>
<BR>[Address Reference Count : 1]<UL><LI> securintymenu.o(i.SecurintyInit)
</UL>
<P><STRONG><a name="[a7]"></a>RemoteDefaults</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, securintymenu.o(i.RemoteDefaults))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RemoteDefaults &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultPara
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultRest
</UL>
<BR>[Address Reference Count : 1]<UL><LI> securintymenu.o(i.SecurintyInit)
</UL>
<P><STRONG><a name="[2ee]"></a>SecurityListInit</STRONG> (Thumb, 288 bytes, Stack size 32 bytes, securintymenu.o(i.SecurityListInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SecurityListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecurintyInit
</UL>

<P><STRONG><a name="[2f1]"></a>SureFomInit</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, securintymenu.o(i.SureFomInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SureFomInit
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecurintyInit
</UL>

<P><STRONG><a name="[171]"></a>SystemInitParameter</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, securintymenu.o(i.SystemInitParameter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInitParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultPara
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultRest
</UL>

<P><STRONG><a name="[2f2]"></a>WatitInit</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, securintymenu.o(i.WatitInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WatitInit
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecurintyInit
</UL>

<P><STRONG><a name="[a8]"></a>ZoneDefaults</STRONG> (Thumb, 180 bytes, Stack size 432 bytes, securintymenu.o(i.ZoneDefaults))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = ZoneDefaults &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadDefaultPara
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultRest
</UL>
<BR>[Address Reference Count : 1]<UL><LI> securintymenu.o(i.SecurintyInit)
</UL>
<P><STRONG><a name="[29b]"></a>MenuAbout</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, menulist.o(i.MenuAbout))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MenuAbout &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuListInit
</UL>

<P><STRONG><a name="[29c]"></a>MenuCall</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, menulist.o(i.MenuCall))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MenuCall &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuListInit
</UL>

<P><STRONG><a name="[2a3]"></a>MenuLog</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, menulist.o(i.MenuLog))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MenuLog &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuListInit
</UL>

<P><STRONG><a name="[2a0]"></a>MenuPhone</STRONG> (Thumb, 236 bytes, Stack size 8 bytes, menulist.o(i.MenuPhone))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MenuPhone &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuListInit
</UL>

<P><STRONG><a name="[2a1]"></a>MenuSecurity</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, menulist.o(i.MenuSecurity))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MenuSecurity &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuListInit
</UL>

<P><STRONG><a name="[29f]"></a>MenuSetup</STRONG> (Thumb, 178 bytes, Stack size 8 bytes, menulist.o(i.MenuSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MenuSetup &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuListInit
</UL>

<P><STRONG><a name="[2a4]"></a>MenuVoice</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, menulist.o(i.MenuVoice))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MenuVoice &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuListInit
</UL>

<P><STRONG><a name="[125]"></a>AlarmProcess</STRONG> (Thumb, 720 bytes, Stack size 56 bytes, wirelessprocess.o(i.AlarmProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = AlarmProcess &rArr; LogWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SirenAlarm
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogWrite
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetectorProcess
</UL>

<P><STRONG><a name="[17d]"></a>ComparisonDetectorID</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, wirelessprocess.o(i.ComparisonDetectorID))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ComparisonDetectorID
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetectorProcess
</UL>

<P><STRONG><a name="[2b8]"></a>ComparisonRemoteID</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, wirelessprocess.o(i.ComparisonRemoteID))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ComparisonRemoteID
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteProcess
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteAlarmProcess
</UL>

<P><STRONG><a name="[17c]"></a>DetectorProcess</STRONG> (Thumb, 488 bytes, Stack size 88 bytes, wirelessprocess.o(i.DetectorProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = DetectorProcess &rArr; AlarmProcess &rArr; LogWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageNameAddr
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetZoneNumber
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetectorAddrID
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetectorTotal
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonDetectorID
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmProcess
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessProcess
</UL>

<P><STRONG><a name="[17f]"></a>GetDetectorTotal</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, wirelessprocess.o(i.GetDetectorTotal))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GetDetectorTotal
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetectorProcess
</UL>

<P><STRONG><a name="[2b9]"></a>GetDoorState</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, wirelessprocess.o(i.GetDoorState))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetDoorState
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteAlawyAndStayProcess
</UL>

<P><STRONG><a name="[2c9]"></a>GetRemoteTotal</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, wirelessprocess.o(i.GetRemoteTotal))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GetRemoteTotal
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteProcess
</UL>

<P><STRONG><a name="[2b7]"></a>RemoteAlarmProcess</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, wirelessprocess.o(i.RemoteAlarmProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = RemoteAlarmProcess &rArr; ComparisonRemoteID
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SirenAlarm
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendThreeLines
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonRemoteID
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteProcess
</UL>

<P><STRONG><a name="[2c7]"></a>RemoteProcess</STRONG> (Thumb, 464 bytes, Stack size 72 bytes, wirelessprocess.o(i.RemoteProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = RemoteProcess &rArr; RemoteAlawyAndStayProcess &rArr; LogWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockProcess
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteAlawyAndStayProcess
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogWrite
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageNameAddr
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageAddr
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoteAlarmProcess
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemoteTotal
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparisonRemoteID
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessProcess
</UL>

<P><STRONG><a name="[a4]"></a>ScreenTimeSet</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, screensavertime.o(i.ScreenTimeSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ScreenTimeSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screensavertime.o(i.ScreenPointerInit)
</UL>
<P><STRONG><a name="[292]"></a>LogListInit</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, logprocess.o(i.LogListInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LogListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMenuInit
</UL>

<P><STRONG><a name="[153]"></a>DialMenuInit</STRONG> (Thumb, 440 bytes, Stack size 8 bytes, callmenu.o(i.DialMenuInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DialMenuInit
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallInit
</UL>

<P><STRONG><a name="[30e]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsp.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAllInit
</UL>

<P><STRONG><a name="[30d]"></a>SystemDeviceInit</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, bsp.o(i.SystemDeviceInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = SystemDeviceInit &rArr; GsmInit &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendThreeLines
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScreenPointerInit
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessPortInit
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoicePortInit
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyInit
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlashInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDInit
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitsystemApp
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUsart
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimer
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSystick
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitFlash
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmInit
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DcDetInit
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAllInit
</UL>

<P><STRONG><a name="[30c]"></a>SystemGUIInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bsp.o(i.SystemGUIInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = SystemGUIInit &rArr; GUI_Init &rArr; WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWinInit
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogoDisplay
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAllInit
</UL>

<P><STRONG><a name="[362]"></a>_DrawBitLine16BPP</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, guidrv_template.o(i._DrawBitLine16BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawBitLine16BPP &rArr; _SetPixelIndex &rArr; LCDDrawPoint &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[363]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 236 bytes, Stack size 64 bytes, guidrv_template.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _DrawBitLine1BPP &rArr; _GetPixelIndex &rArr; LCDReadPointRGB &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[364]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 358 bytes, Stack size 56 bytes, guidrv_template.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _DrawBitLine2BPP &rArr; _SetPixelIndex &rArr; LCDDrawPoint &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[365]"></a>_DrawBitLine32BPP</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, guidrv_template.o(i._DrawBitLine32BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawBitLine32BPP &rArr; _SetPixelIndex &rArr; LCDDrawPoint &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[366]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 358 bytes, Stack size 56 bytes, guidrv_template.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _DrawBitLine4BPP &rArr; _SetPixelIndex &rArr; LCDDrawPoint &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[367]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, guidrv_template.o(i._DrawBitLine8BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _DrawBitLine8BPP &rArr; _SetPixelIndex &rArr; LCDDrawPoint &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[c7]"></a>_DrawBitmap</STRONG> (Thumb, 250 bytes, Stack size 64 bytes, guidrv_template.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine1BPP &rArr; _GetPixelIndex &rArr; LCDReadPointRGB &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[c8]"></a>_DrawHLine</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, guidrv_template.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; _XorPixel &rArr; _GetPixelIndex &rArr; LCDReadPointRGB &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[c9]"></a>_DrawVLine</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, guidrv_template.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _DrawVLine &rArr; _FillRect &rArr; _XorPixel &rArr; _GetPixelIndex &rArr; LCDReadPointRGB &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[ca]"></a>_FillRect</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, guidrv_template.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _FillRect &rArr; _XorPixel &rArr; _GetPixelIndex &rArr; LCDReadPointRGB &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[d1]"></a>_GetDevData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidrv_template.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[cf]"></a>_GetDevFunc</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, guidrv_template.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[d0]"></a>_GetDevProp</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, guidrv_template.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[cb]"></a>_GetPixelIndex</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, guidrv_template.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _GetPixelIndex &rArr; LCDReadPointRGB &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDReadPointRGB
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[d2]"></a>_GetRect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, guidrv_template.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[b8]"></a>_Init</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, guidrv_template.o(i._Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _Init &rArr; LCD_X_DisplayDriver &rArr; LCDInit &rArr; LCDFSMCInit
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[373]"></a>_InitOnce</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, guidrv_template.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPP
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
</UL>

<P><STRONG><a name="[ba]"></a>_Off</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidrv_template.o(i._Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _Off &rArr; LCD_X_DisplayDriver &rArr; LCDInit &rArr; LCDFSMCInit
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[b9]"></a>_On</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidrv_template.o(i._On))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _On &rArr; LCD_X_DisplayDriver &rArr; LCDInit &rArr; LCDFSMCInit
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[bb]"></a>_SetLUTEntry</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, guidrv_template.o(i._SetLUTEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _SetLUTEntry &rArr; LCD_X_DisplayDriver &rArr; LCDInit &rArr; LCDFSMCInit
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[ce]"></a>_SetOrg</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, guidrv_template.o(i._SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _SetOrg &rArr; LCD_X_DisplayDriver &rArr; LCDInit &rArr; LCDFSMCInit
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[cc]"></a>_SetPixelIndex</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, guidrv_template.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _SetPixelIndex &rArr; LCDDrawPoint &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[b7]"></a>_SetSize</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, guidrv_template.o(i._SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _SetSize &rArr; LCD_X_DisplayDriver &rArr; LCDInit &rArr; LCDFSMCInit
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[b5]"></a>_SetVRAMAddr</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, guidrv_template.o(i._SetVRAMAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _SetVRAMAddr &rArr; LCD_X_DisplayDriver &rArr; LCDInit &rArr; LCDFSMCInit
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[b6]"></a>_SetVSize</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, guidrv_template.o(i._SetVSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _SetVSize &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[cd]"></a>_XorPixel</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidrv_template.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _XorPixel &rArr; _GetPixelIndex &rArr; LCDReadPointRGB &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[135]"></a>ArmOrDisarmReport</STRONG> (Thumb, 340 bytes, Stack size 128 bytes, systemset.o(i.ArmOrDisarmReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ArmOrDisarmReport &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[176]"></a>DelaySet</STRONG> (Thumb, 180 bytes, Stack size 64 bytes, systemset.o(i.DelaySet))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = DelaySet &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[17a]"></a>DeleteAllRemote</STRONG> (Thumb, 198 bytes, Stack size 48 bytes, systemset.o(i.DeleteAllRemote))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DeleteAllRemote &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[22c]"></a>IllegalArm</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, systemset.o(i.IllegalArm))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = IllegalArm &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[2ae]"></a>PasswordInfo</STRONG> (Thumb, 126 bytes, Stack size 72 bytes, systemset.o(i.PasswordInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = PasswordInfo &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[2ca]"></a>RemoteSet</STRONG> (Thumb, 644 bytes, Stack size 96 bytes, systemset.o(i.RemoteSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = RemoteSet &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[2cb]"></a>RingTimesSet</STRONG> (Thumb, 122 bytes, Stack size 56 bytes, systemset.o(i.RingTimesSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = RingTimesSet &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[2d6]"></a>SMSReply</STRONG> (Thumb, 138 bytes, Stack size 56 bytes, systemset.o(i.SMSReply))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SMSReply &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[306]"></a>SirenTimeSet</STRONG> (Thumb, 100 bytes, Stack size 56 bytes, systemset.o(i.SirenTimeSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SirenTimeSet &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[30f]"></a>SystemContacts</STRONG> (Thumb, 436 bytes, Stack size 168 bytes, systemset.o(i.SystemContacts))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SystemContacts &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[310]"></a>SystemDeletPhone</STRONG> (Thumb, 454 bytes, Stack size 152 bytes, systemset.o(i.SystemDeletPhone))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = SystemDeletPhone &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[31a]"></a>SystemRTCUpdate</STRONG> (Thumb, 294 bytes, Stack size 80 bytes, systemset.o(i.SystemRTCUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SystemRTCUpdate &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[31b]"></a>SystemState</STRONG> (Thumb, 178 bytes, Stack size 96 bytes, systemset.o(i.SystemState))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SystemState &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[31c]"></a>TimeToString</STRONG> (Thumb, 58 bytes, Stack size 64 bytes, systemset.o(i.TimeToString))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TimeToString &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[31f]"></a>UploadSecurityCenter</STRONG> (Thumb, 274 bytes, Stack size 128 bytes, systemset.o(i.UploadSecurityCenter))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = UploadSecurityCenter &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[31d]"></a>VolumeSet</STRONG> (Thumb, 210 bytes, Stack size 64 bytes, systemset.o(i.VolumeSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = VolumeSet &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[320]"></a>WirelessSirenSetm</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, systemset.o(i.WirelessSirenSetm))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WirelessSirenSetm
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[31e]"></a>ZoneSet</STRONG> (Thumb, 412 bytes, Stack size 120 bytes, systemset.o(i.ZoneSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ZoneSet &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSet
</UL>

<P><STRONG><a name="[85]"></a>CreateLogicTask</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, os.o(i.CreateLogicTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CreateLogicTask
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTask
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitStack
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os.o(i.InitOs)
</UL>
<P><STRONG><a name="[86]"></a>CreateMenuTask</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, os.o(i.CreateMenuTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CreateMenuTask
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTask
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitStack
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os.o(i.InitOs)
</UL>
<P><STRONG><a name="[8a]"></a>DelayMs</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, os.o(i.DelayMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Schedule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os.o(i.InitOs)
</UL>
<P><STRONG><a name="[166]"></a>InitStack</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, os.o(i.InitStack))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMenuTask
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateLogicTask
</UL>

<P><STRONG><a name="[167]"></a>InitTask</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os.o(i.InitTask))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMenuTask
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateLogicTask
</UL>

<P><STRONG><a name="[88]"></a>PendMessageQueue</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, os.o(i.PendMessageQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PendMessageQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Schedule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os.o(i.InitOs)
</UL>
<P><STRONG><a name="[89]"></a>PostMessageQueue</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, os.o(i.PostMessageQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PostMessageQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Schedule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os.o(i.InitOs)
</UL>
<P><STRONG><a name="[174]"></a>Schedule</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, os.o(i.Schedule))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystickRoutine
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostMessageQueue
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendMessageQueue
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
</UL>

<P><STRONG><a name="[87]"></a>Start</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, os.o(i.Start))
<BR>[Address Reference Count : 1]<UL><LI> os.o(i.InitOs)
</UL>
<P><STRONG><a name="[aa]"></a>SystickRoutine</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, os.o(i.SystickRoutine))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystickRoutine
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Schedule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os.o(i.Start)
</UL>
<P><STRONG><a name="[14]"></a>Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, system.o(i.Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = Init &rArr; SystemAllInit &rArr; LoadDefaultPara &rArr; ZoneDefaults &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGui
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOs
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemAllInit
</UL>
<BR>[Address Reference Count : 2]<UL><LI> system.o(i.Init)
<LI> system.o(.data)
</UL>
<P><STRONG><a name="[257]"></a>KeyGetStateAndValue</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, device_key.o(i.KeyGetStateAndValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = KeyGetStateAndValue &rArr; TouchGetKey &rArr; TouchKeyRead &rArr; IICReadByte &rArr; IICNAck &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGetKey
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeySystick100Routine
</UL>

<P><STRONG><a name="[258]"></a>TouchGetKey</STRONG> (Thumb, 268 bytes, Stack size 16 bytes, device_key.o(i.TouchGetKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = TouchGetKey &rArr; TouchKeyRead &rArr; IICReadByte &rArr; IICNAck &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyRead
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyGetStateAndValue
</UL>

<P><STRONG><a name="[328]"></a>TouchKeyRead</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, device_key.o(i.TouchKeyRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = TouchKeyRead &rArr; IICReadByte &rArr; IICNAck &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICWaitAck
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICStop
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICStart
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICSendByte
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICReadByte
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGetKey
</UL>

<P><STRONG><a name="[15]"></a>Dummy</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, device_systick.o(i.Dummy))
<BR>[Address Reference Count : 1]<UL><LI> device_systick.o(.data)
</UL>
<P><STRONG><a name="[8d]"></a>RegisterSystick</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, device_systick.o(i.RegisterSystick))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RegisterSystick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_systick.o(i.InitSystick)
</UL>
<P><STRONG><a name="[b1]"></a>WirelessDecode</STRONG> (Thumb, 512 bytes, Stack size 48 bytes, device_wireless.o(i.WirelessDecode))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = WirelessDecode &rArr; PostMessage &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostMessage
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessDecodeInterrupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_wireless.o(i.WirelessPortInit)
</UL>
<P><STRONG><a name="[359]"></a>WirelessSendBit</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, device_wireless.o(i.WirelessSendBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = WirelessSendBit &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessSendPacket
</UL>

<P><STRONG><a name="[b2]"></a>WirelessSendPacket</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, device_wireless.o(i.WirelessSendPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = WirelessSendPacket &rArr; WirelessSendBit &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WirelessSendBit
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendWirelessData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_wireless.o(i.WirelessPortInit)
</UL>
<P><STRONG><a name="[98]"></a>LCDDrawingBitmap</STRONG> (Thumb, 404 bytes, Stack size 80 bytes, device_lcd.o(i.LCDDrawingBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCDDrawingBitmap &rArr; LCDReadPointRGB &rArr; LCDSetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDReadPointRGB
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawPoint
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_lcd.o(i.LCDInit)
</UL>
<P><STRONG><a name="[263]"></a>LCDFSMCInit</STRONG> (Thumb, 120 bytes, Stack size 120 bytes, device_lcd.o(i.LCDFSMCInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCDFSMCInit
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMInit
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMCmd
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
</UL>

<P><STRONG><a name="[268]"></a>LCDGPIOInit</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, device_lcd.o(i.LCDGPIOInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCDGPIOInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
</UL>

<P><STRONG><a name="[26a]"></a>LCDReset</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, device_lcd.o(i.LCDReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCDReset &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
</UL>

<P><STRONG><a name="[26d]"></a>LCDWriteReg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, device_lcd.o(i.LCDWriteReg))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDReadPointRGB
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSetWindow
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetCursor
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDReadRegister
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdScanDirection
</UL>

<P><STRONG><a name="[26b]"></a>LCDWriteRegister</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, device_lcd.o(i.LCDWriteRegister))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdScanDirection
</UL>

<P><STRONG><a name="[26f]"></a>LcdDisplayDirection</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, device_lcd.o(i.LcdDisplayDirection))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LcdDisplayDirection &rArr; LcdScanDirection
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdScanDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDInit
</UL>

<P><STRONG><a name="[28c]"></a>LcdScanDirection</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, device_lcd.o(i.LcdScanDirection))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LcdScanDirection
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteData
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteRegister
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdDisplayDirection
</UL>

<P><STRONG><a name="[99]"></a>RGB888toGRB565</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, device_lcd.o(i.RGB888toGRB565))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RGB888toGRB565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_lcd.o(i.LCDInit)
</UL>
<P><STRONG><a name="[a0]"></a>KeyLEDClose</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, device_led.o(i.KeyLEDClose))
<BR>[Address Reference Count : 1]<UL><LI> device_led.o(i.LEDInit)
</UL>
<P><STRONG><a name="[9f]"></a>LEDConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, device_led.o(i.LEDConfig))
<BR>[Address Reference Count : 1]<UL><LI> device_led.o(i.LEDInit)
</UL>
<P><STRONG><a name="[ad]"></a>SirenDi</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, device_voice.o(i.SirenDi))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SirenDi &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_voice.o(i.VoicePortInit)
</UL>
<P><STRONG><a name="[8e]"></a>Start</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, device_timer.o(i.Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_timer.o(i.InitTimer)
</UL>
<P><STRONG><a name="[8f]"></a>Stop</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, device_timer.o(i.Stop))
<BR>[Address Reference Count : 1]<UL><LI> device_timer.o(i.InitTimer)
</UL>
<P><STRONG><a name="[70]"></a>Register</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, device_adc.o(i.Register))
<BR>[Address Reference Count : 1]<UL><LI> device_adc.o(i.InitAdc)
</UL>
<P><STRONG><a name="[91]"></a>CloseUsart2</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, device_usart.o(i.CloseUsart2))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CloseUsart2 &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_usart.o(i.InitUsart)
</UL>
<P><STRONG><a name="[256]"></a>InitUsartQueue</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, device_usart.o(i.InitUsartQueue))
<BR><BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUsart
</UL>

<P><STRONG><a name="[90]"></a>OpenUsart2</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, device_usart.o(i.OpenUsart2))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = OpenUsart2 &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_usart.o(i.InitUsart)
</UL>
<P><STRONG><a name="[92]"></a>WriteByteToUsart2</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, device_usart.o(i.WriteByteToUsart2))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteToUsart2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_usart.o(i.InitUsart)
</UL>
<P><STRONG><a name="[93]"></a>WriteToUsart2</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, device_usart.o(i.WriteToUsart2))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WriteToUsart2
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByteToUsart2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_usart.o(i.InitUsart)
</UL>
<P><STRONG><a name="[216]"></a>GsmGPIOInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, device_gsm.o(i.GsmGPIOInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GsmGPIOInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmInit
</UL>

<P><STRONG><a name="[21a]"></a>GsmRxdTime</STRONG> (Thumb, 432 bytes, Stack size 24 bytes, device_gsm.o(i.GsmRxdTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = GsmRxdTime &rArr; PostMessage &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostMessage
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[6e]"></a>GsmSendSMS</STRONG> (Thumb, 68 bytes, Stack size 136 bytes, device_gsm.o(i.GsmSendSMS))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GsmSendSMS &rArr; GsmATSend &rArr; StrinPrintf &rArr; __c89vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrinPrintf
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmATSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_gsm.o(i.GsmInit)
</UL>
<P><STRONG><a name="[2b1]"></a>RTCGetWeek</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, device_rtc.o(i.RTCGetWeek))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTCGetWeek
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCGetTime
</UL>

<P><STRONG><a name="[24c]"></a>RTCNVICConfig</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, device_rtc.o(i.RTCNVICConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RTCNVICConfig &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRTC
</UL>

<P><STRONG><a name="[190]"></a>FlashLock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, device_flash.o(i.FlashLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FlashLock
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWrite
</UL>

<P><STRONG><a name="[192]"></a>FlashRead</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, device_flash.o(i.FlashRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FlashRead
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashReadHalfWord
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWrite
</UL>

<P><STRONG><a name="[194]"></a>FlashUnlock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, device_flash.o(i.FlashUnlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FlashUnlock
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWrite
</UL>

<P><STRONG><a name="[196]"></a>FlashWriteNoCheck</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, device_flash.o(i.FlashWriteNoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = FlashWriteNoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWrite
</UL>

<P><STRONG><a name="[82]"></a>AddArCheck</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, systemgui.o(i.AddArCheck))
<BR>[Address Reference Count : 1]<UL><LI> systemgui.o(i.InitGui)
</UL>
<P><STRONG><a name="[84]"></a>AddAutoDigit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, systemgui.o(i.AddAutoDigit))
<BR>[Address Reference Count : 1]<UL><LI> systemgui.o(i.InitGui)
</UL>
<P><STRONG><a name="[7c]"></a>AddCheckBox</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, systemgui.o(i.AddCheckBox))
<BR>[Address Reference Count : 1]<UL><LI> systemgui.o(i.InitGui)
</UL>
<P><STRONG><a name="[7a]"></a>AddFillArea</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, systemgui.o(i.AddFillArea))
<BR>[Address Reference Count : 1]<UL><LI> systemgui.o(i.InitGui)
</UL>
<P><STRONG><a name="[83]"></a>AddFocus</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, systemgui.o(i.AddFocus))
<BR>[Address Reference Count : 1]<UL><LI> systemgui.o(i.InitGui)
</UL>
<P><STRONG><a name="[75]"></a>AddIcon</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, systemgui.o(i.AddIcon))
<BR>[Address Reference Count : 1]<UL><LI> systemgui.o(i.InitGui)
</UL>
<P><STRONG><a name="[76]"></a>AddLabel</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, systemgui.o(i.AddLabel))
<BR>[Address Reference Count : 1]<UL><LI> systemgui.o(i.InitGui)
</UL>
<P><STRONG><a name="[77]"></a>AddList</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, systemgui.o(i.AddList))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = AddList &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddLists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> systemgui.o(i.InitGui)
</UL>
<P><STRONG><a name="[79]"></a>AddListBox</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, systemgui.o(i.AddListBox))
<BR>[Address Reference Count : 1]<UL><LI> systemgui.o(i.InitGui)
</UL>
<P><STRONG><a name="[78]"></a>AddLists</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, systemgui.o(i.AddLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = AddLists &rArr; AddList &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddList
</UL>
<BR>[Address Reference Count : 1]<UL><LI> systemgui.o(i.InitGui)
</UL>
<P><STRONG><a name="[7b]"></a>AddTextBox</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, systemgui.o(i.AddTextBox))
<BR>[Address Reference Count : 1]<UL><LI> systemgui.o(i.InitGui)
</UL>
<P><STRONG><a name="[15b]"></a>CheckListUpdate</STRONG> (Thumb, 1242 bytes, Stack size 80 bytes, systemgui.o(i.CheckListUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = CheckListUpdate &rArr; DrawCheckBox &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCheckBox
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxStaticUpdate
</UL>

<P><STRONG><a name="[15c]"></a>DrawCheckBox</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, systemgui.o(i.DrawCheckBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = DrawCheckBox &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateArCheckBox
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckListUpdate
</UL>

<P><STRONG><a name="[221]"></a>ICONListUpdate</STRONG> (Thumb, 1960 bytes, Stack size 104 bytes, systemgui.o(i.ICONListUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = ICONListUpdate &rArr; ImageDrawAlpah
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageDrawAlpah
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxStaticUpdate
</UL>

<P><STRONG><a name="[7d]"></a>InitForm</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, systemgui.o(i.InitForm))
<BR>[Address Reference Count : 1]<UL><LI> systemgui.o(i.InitGui)
</UL>
<P><STRONG><a name="[28d]"></a>ListBoxStaticUpdate</STRONG> (Thumb, 624 bytes, Stack size 40 bytes, systemgui.o(i.ListBoxStaticUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = ListBoxStaticUpdate &rArr; TextListUpdate &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogListUpdate
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TextListUpdate
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchListUpdate
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONListUpdate
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckListUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update
</UL>

<P><STRONG><a name="[80]"></a>ModifyTextBoxData</STRONG> (Thumb, 406 bytes, Stack size 32 bytes, systemgui.o(i.ModifyTextBoxData))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ModifyTextBoxData
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> systemgui.o(i.InitGui)
</UL>
<P><STRONG><a name="[74]"></a>Parse</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, systemgui.o(i.Parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = Parse &rArr; Update &rArr; UpdateIcon &rArr; BmpDecode &rArr; f_open &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseTime
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseTextBox
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseListbox
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseLabel
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseIcon
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseFillArea
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseAutoDigit
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseArCheckBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> systemgui.o(i.InitGui)
</UL>
<P><STRONG><a name="[2aa]"></a>ParseArCheckBox</STRONG> (Thumb, 366 bytes, Stack size 8 bytes, systemgui.o(i.ParseArCheckBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ParseArCheckBox
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse
</UL>

<P><STRONG><a name="[2ab]"></a>ParseAutoDigit</STRONG> (Thumb, 224 bytes, Stack size 8 bytes, systemgui.o(i.ParseAutoDigit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ParseAutoDigit
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse
</UL>

<P><STRONG><a name="[2a7]"></a>ParseFillArea</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, systemgui.o(i.ParseFillArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ParseFillArea
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse
</UL>

<P><STRONG><a name="[2a5]"></a>ParseIcon</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, systemgui.o(i.ParseIcon))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ParseIcon
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse
</UL>

<P><STRONG><a name="[2a6]"></a>ParseLabel</STRONG> (Thumb, 260 bytes, Stack size 12 bytes, systemgui.o(i.ParseLabel))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ParseLabel
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse
</UL>

<P><STRONG><a name="[2a9]"></a>ParseListbox</STRONG> (Thumb, 564 bytes, Stack size 20 bytes, systemgui.o(i.ParseListbox))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ParseListbox &rArr; ListSearch
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListSearch
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse
</UL>

<P><STRONG><a name="[2a8]"></a>ParseTextBox</STRONG> (Thumb, 254 bytes, Stack size 8 bytes, systemgui.o(i.ParseTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ParseTextBox
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse
</UL>

<P><STRONG><a name="[28f]"></a>SwitchListUpdate</STRONG> (Thumb, 1278 bytes, Stack size 64 bytes, systemgui.o(i.SwitchListUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = SwitchListUpdate &rArr; DrawSwitch &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxStaticUpdate
</UL>

<P><STRONG><a name="[7e]"></a>SwitchTextBoxFocusDown</STRONG> (Thumb, 414 bytes, Stack size 12 bytes, systemgui.o(i.SwitchTextBoxFocusDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SwitchTextBoxFocusDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> systemgui.o(i.InitGui)
</UL>
<P><STRONG><a name="[7f]"></a>SwitchTextBoxFocusUp</STRONG> (Thumb, 404 bytes, Stack size 12 bytes, systemgui.o(i.SwitchTextBoxFocusUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SwitchTextBoxFocusUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> systemgui.o(i.InitGui)
</UL>
<P><STRONG><a name="[28e]"></a>TextListUpdate</STRONG> (Thumb, 3716 bytes, Stack size 104 bytes, systemgui.o(i.TextListUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = TextListUpdate &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxStaticUpdate
</UL>

<P><STRONG><a name="[2ad]"></a>Update</STRONG> (Thumb, 358 bytes, Stack size 24 bytes, systemgui.o(i.Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = Update &rArr; UpdateIcon &rArr; BmpDecode &rArr; f_open &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecTimeUpdate
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageDraw
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserUpdate
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateAutoDigit
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDisplay
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryDisplay
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextBox
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateLabel
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateIcon
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateGsmSignal
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFillArea
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateArCheckBox
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListBoxStaticUpdate
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parse
</UL>

<P><STRONG><a name="[331]"></a>UpdateArCheckBox</STRONG> (Thumb, 628 bytes, Stack size 64 bytes, systemgui.o(i.UpdateArCheckBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = UpdateArCheckBox &rArr; DrawCheckBox &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCheckBox
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update
</UL>

<P><STRONG><a name="[32c]"></a>UpdateFillArea</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, systemgui.o(i.UpdateFillArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UpdateFillArea
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update
</UL>

<P><STRONG><a name="[330]"></a>UpdateGsmSignal</STRONG> (Thumb, 598 bytes, Stack size 8 bytes, systemgui.o(i.UpdateGsmSignal))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = UpdateGsmSignal &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillArea
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmSignalTab
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update
</UL>

<P><STRONG><a name="[32e]"></a>UpdateIcon</STRONG> (Thumb, 912 bytes, Stack size 48 bytes, systemgui.o(i.UpdateIcon))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = UpdateIcon &rArr; BmpDecode &rArr; f_open &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdFillArea
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDFillAlpha
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageDrawAlpah
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpDecode
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update
</UL>

<P><STRONG><a name="[32d]"></a>UpdateLabel</STRONG> (Thumb, 1372 bytes, Stack size 56 bytes, systemgui.o(i.UpdateLabel))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = UpdateLabel &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AboutInfoDisp
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update
</UL>

<P><STRONG><a name="[32f]"></a>UpdateTextBox</STRONG> (Thumb, 984 bytes, Stack size 48 bytes, systemgui.o(i.UpdateTextBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = UpdateTextBox &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDDrawRectangle
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update
</UL>

<P><STRONG><a name="[387]"></a>check_fs</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, ff.o(i.check_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = check_fs &rArr; disk_read &rArr; SPI_Flash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[392]"></a>chk_chr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ff.o(i.chk_chr))
<BR><BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[389]"></a>chk_mounted</STRONG> (Thumb, 954 bytes, Stack size 80 bytes, ff.o(i.chk_mounted))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = chk_mounted &rArr; disk_initialize &rArr; SPI_Flash_Init &rArr; SPI2_Init &rArr; InitSPIRxDMA &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[38d]"></a>create_chain</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, ff.o(i.create_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[390]"></a>create_name</STRONG> (Thumb, 336 bytes, Stack size 48 bytes, ff.o(i.create_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = create_name &rArr; mem_set
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[393]"></a>dir_find</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, ff.o(i.dir_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[397]"></a>dir_next</STRONG> (Thumb, 324 bytes, Stack size 24 bytes, ff.o(i.dir_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[399]"></a>dir_register</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, ff.o(i.dir_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = dir_register &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[394]"></a>dir_sdi</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, ff.o(i.dir_sdi))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[39e]"></a>follow_path</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, ff.o(i.follow_path))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[3a0]"></a>ld_clust</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ff.o(i.ld_clust))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ld_clust
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[396]"></a>mem_cmp</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, ff.o(i.mem_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[39a]"></a>mem_cpy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ff.o(i.mem_cpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[391]"></a>mem_set</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, ff.o(i.mem_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[395]"></a>move_window</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, ff.o(i.move_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[3a2]"></a>remove_chain</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, ff.o(i.remove_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[3a1]"></a>st_clust</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(i.st_clust))
<BR><BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[3a3]"></a>sync</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, ff.o(i.sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = sync &rArr; move_window &rArr; disk_write &rArr; SPI_Flash_Write &rArr; SPI_Flash_Write_NoCheck &rArr; SPI_Flash_Write_Page &rArr; SPI_Flash_Wait_Busy &rArr; SPI_Flash_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[39d]"></a>validate</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ff.o(i.validate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = validate
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[2cd]"></a>_DoInit</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, segger_rtt.o(i._DoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[2cf]"></a>_GetAvailWriteSpace</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, segger_rtt.o(i._GetAvailWriteSpace))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetAvailWriteSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[2d1]"></a>_WriteBlocking</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, segger_rtt.o(i._WriteBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _WriteBlocking &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[2d0]"></a>_WriteNoCheck</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, segger_rtt.o(i._WriteNoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[2d4]"></a>_PrintInt</STRONG> (Thumb, 236 bytes, Stack size 48 bytes, segger_rtt_printf.o(i._PrintInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>

<P><STRONG><a name="[2d5]"></a>_PrintUnsigned</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, segger_rtt_printf.o(i._PrintUnsigned))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
</UL>

<P><STRONG><a name="[2d3]"></a>_StoreChar</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, segger_rtt_printf.o(i._StoreChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
</UL>

<P><STRONG><a name="[1a6]"></a>FillCircle</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, guiaa_circle.o(i.FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircleAA_HiRes
</UL>

<P><STRONG><a name="[1b3]"></a>_FillRoundedRect</STRONG> (Thumb, 230 bytes, Stack size 64 bytes, guiaa_fillroundedrect.o(i._FillRoundedRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _FillRoundedRect
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_FillRoundedRect
</UL>

<P><STRONG><a name="[d6]"></a>_Color2IndexBulk</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, guicc_m565.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[d3]"></a>_Color2Index_M565</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, guicc_m565.o(i._Color2Index_M565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[d5]"></a>_GetIndexMask_M565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m565.o(i._GetIndexMask_M565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[d7]"></a>_Index2ColorBulk</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guicc_m565.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[1c1]"></a>_AddFreeMemory</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, gui_alloc.o(i._AddFreeMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[1bb]"></a>_Alloc</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, gui_alloc.o(i._Alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PopFreeBlock
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>

<P><STRONG><a name="[36e]"></a>_EnlargeBlocks</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, gui_alloc.o(i._EnlargeBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + In Cycle
<LI>Call Chain = _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PopFreeBlock
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[35a]"></a>_GetMinIndex</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i._GetMinIndex))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[1c3]"></a>_InitOnce</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, gui_alloc.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TestRAM
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[bd]"></a>_OnExit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_alloc.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_alloc.o(i._InitOnce)
</UL>
<P><STRONG><a name="[35c]"></a>_PopFreeBlock</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_alloc.o(i._PopFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _PopFreeBlock &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[1c2]"></a>_PushFreeBlock</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_alloc.o(i._PushFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _PushFreeBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[1c5]"></a>_RemoveFreeBlock</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gui_alloc.o(i._RemoveFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[1c4]"></a>_RemoveHoles</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, gui_alloc.o(i._RemoveHoles))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[375]"></a>_TestRAM</STRONG> (Thumb, 234 bytes, Stack size 20 bytes, gui_alloc.o(i._TestRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _TestRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[35b]"></a>_WriteTagData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_alloc.o(i._WriteTagData))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[1e3]"></a>_InitContext</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gui_core.o(i._InitContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _InitContext
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[6b]"></a>_OnExit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gui_core.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(i.GUI__Config)
</UL>
<P><STRONG><a name="[1cf]"></a>_UnlinkDevice</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_device.o(i._UnlinkDevice))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
</UL>

<P><STRONG><a name="[271]"></a>_GetDevProp</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i._GetDevProp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>

<P><STRONG><a name="[279]"></a>_GetMaxValue</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i._GetMaxValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
</UL>

<P><STRONG><a name="[368]"></a>_DrawBitmap</STRONG> (Thumb, 530 bytes, Stack size 72 bytes, lcd_rle8.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawBitmap &rArr; LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE8
</UL>

<P><STRONG><a name="[da]"></a>_DrawBitmap_RLE8</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, lcd_rle8.o(i._DrawBitmap_RLE8))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DrawBitmap_RLE8 &rArr; _DrawBitmap &rArr; LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rle8.o(.constdata)
</UL>
<P><STRONG><a name="[b3]"></a>_GetByte_pPixel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_rle8.o(i._GetByte_pPixel))
<BR>[Address Reference Count : 1]<UL><LI> lcd_rle8.o(i._DrawBitmap_RLE8)
</UL>
<P><STRONG><a name="[36b]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 312 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[36c]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[36d]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 340 bytes, Stack size 40 bytes, guidev_16.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[e3]"></a>_DrawBitmap</STRONG> (Thumb, 678 bytes, Stack size 104 bytes, guidev_16.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[e4]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_16.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[e5]"></a>_DrawVLine</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, guidev_16.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[e6]"></a>_FillRect</STRONG> (Thumb, 166 bytes, Stack size 72 bytes, guidev_16.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[ed]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[eb]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[ec]"></a>_GetDevProp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[e7]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidev_16.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[ee]"></a>_GetRect</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidev_16.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[ea]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_16.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[e8]"></a>_SetPixelIndex</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev_16.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[36a]"></a>_XY2PTR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidev_16.o(i._XY2PTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[e9]"></a>_XorPixel</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, guidev_16.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[1b9]"></a>CalcClipRectHL</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, guiaa_lib.o(i.CalcClipRectHL))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
</UL>

<P><STRONG><a name="[1b8]"></a>_CleanLine</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, guiaa_lib.o(i._CleanLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _CleanLine &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>

<P><STRONG><a name="[6a]"></a>_DrawHLine</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, guiaa_lib.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _DrawHLine &rArr; _FlushLine &rArr; LCD_SetPixelAA &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_lib.o(i.GUI_AA_Init)
</UL>
<P><STRONG><a name="[1ad]"></a>_FlushLine</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, guiaa_lib.o(i._FlushLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _FlushLine &rArr; LCD_SetPixelAA &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CleanLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>

<P><STRONG><a name="[69]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guiaa_lib.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_lib.o(i.GUI_AA_Init)
</UL>
<P><STRONG><a name="[1fc]"></a>_DispLine</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, gui_charline.o(i._DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DispLine &rArr; GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[17]"></a>_Log2VisBuffered</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_charline.o(i._Log2VisBuffered))
<BR>[Address Reference Count : 1]<UL><LI> gui_charline.o(.data)
</UL>
<P><STRONG><a name="[1de]"></a>_GotoX</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_goto.o(i._GotoX))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>

<P><STRONG><a name="[1df]"></a>_GotoY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_goto.o(i._GotoY))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>

<P><STRONG><a name="[f1]"></a>_CalcSizeOfChar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._CalcSizeOfChar))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[f2]"></a>_Encode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._Encode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[ef]"></a>_GetCharCode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharCode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[f0]"></a>_GetCharSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[f4]"></a>_SetBkColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(i._SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetBkColor
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[f3]"></a>_SetColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(i._SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[f5]"></a>_SetDrawMode</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, lcd.o(i._SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[9e]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd_color.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_color.o(i.LCD_InitColors)
</UL>
<P><STRONG><a name="[35e]"></a>_Convert16</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, guidev_writetoactiveopaque.o(i._Convert16))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Convert16 &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[1ed]"></a>_WriteToActiveOpaque_8</STRONG> (Thumb, 806 bytes, Stack size 160 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WriteToActiveOpaque_8 &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[1ee]"></a>_WriteToActiveOpaque_HT</STRONG> (Thumb, 752 bytes, Stack size 104 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_HT))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr;  _Alloc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[351]"></a>_DesktopHandle2Index</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm.o(i._DesktopHandle2Index))
<BR><BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[354]"></a>_FindNext_IVR</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, wm.o(i._FindNext_IVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[371]"></a>_Findx0</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, wm.o(i._Findx0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[372]"></a>_Findx1</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, wm.o(i._Findx1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx1 &rArr;  _Findx1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[370]"></a>_Findy1</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, wm.o(i._Findy1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[34b]"></a>_Invalidate1Abs</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, wm.o(i._Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RectIsNZ
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[af]"></a>_OnExit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, wm.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[34f]"></a>_SetClipRectUserIntersect</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, wm.o(i._SetClipRectUserIntersect))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[ae]"></a>cbBackWin</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, wm.o(i.cbBackWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = cbBackWin &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[f6]"></a>_Color2Index_0</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, guicc_0.o(i._Color2Index_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Color2Index_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcColorDist
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[f8]"></a>_GetIndexMask_0</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, guicc_0.o(i._GetIndexMask_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetIndexMask_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[f7]"></a>_Index2Color_0</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, guicc_0.o(i._Index2Color_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Index2Color_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[37d]"></a>_printf_core</STRONG> (Thumb, 996 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>

<P><STRONG><a name="[383]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[382]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[be]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf8.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0sprintf$8)
</UL>
<P><STRONG><a name="[380]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[37f]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsnprintf
</UL>

<P><STRONG><a name="[385]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[384]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[bf]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsnprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
